{"ast":null,"code":"app.get('/api/availability/all', async (req, res) => {\n  try {\n    const user = req.session.user;\n    if (!user) return res.status(401).json({\n      error: 'Unauthorized'\n    });\n    const {\n      timezone,\n      start,\n      end\n    } = req.query;\n    console.log('Fetching events for all members...');\n    console.log('Members:', members); // Log the members array\n\n    oauth2Client.setCredentials(user.tokens);\n    const calendar = google.calendar({\n      version: 'v3',\n      auth: oauth2Client\n    });\n\n    // Fetch events for all members\n    const allEvents = await Promise.all(members.map(async member => {\n      console.log(`Fetching events for member: ${member.name} (${member.calendarId})`); // Log each member\n\n      const {\n        data\n      } = await calendar.events.list({\n        calendarId: member.calendarId,\n        timeMin: start,\n        timeMax: end,\n        maxResults: 100,\n        singleEvents: true,\n        orderBy: 'startTime',\n        timeZone: timezone\n      });\n      console.log(`Events for ${member.name}:`, data.items); // Log events for each member\n\n      return {\n        memberId: member.id,\n        memberName: member.name,\n        events: data.items || []\n      };\n    }));\n    console.log('All events:', allEvents); // Log the final response\n    res.json(allEvents);\n  } catch (error) {\n    console.error('Calendar API error:', error);\n    res.status(500).json({\n      error: 'Failed to fetch availability for all members'\n    });\n  }\n});","map":{"version":3,"names":["app","get","req","res","user","session","status","json","error","timezone","start","end","query","console","log","members","oauth2Client","setCredentials","tokens","calendar","google","version","auth","allEvents","Promise","all","map","member","name","calendarId","data","events","list","timeMin","timeMax","maxResults","singleEvents","orderBy","timeZone","items","memberId","id","memberName"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/AllMembersCalendar.jsx"],"sourcesContent":["app.get('/api/availability/all', async (req, res) => {\r\n  try {\r\n    const user = req.session.user;\r\n    if (!user) return res.status(401).json({ error: 'Unauthorized' });\r\n\r\n    const { timezone, start, end } = req.query;\r\n\r\n    console.log('Fetching events for all members...');\r\n    console.log('Members:', members); // Log the members array\r\n\r\n    oauth2Client.setCredentials(user.tokens);\r\n    const calendar = google.calendar({ version: 'v3', auth: oauth2Client });\r\n\r\n    // Fetch events for all members\r\n    const allEvents = await Promise.all(\r\n      members.map(async (member) => {\r\n        console.log(`Fetching events for member: ${member.name} (${member.calendarId})`); // Log each member\r\n\r\n        const { data } = await calendar.events.list({\r\n          calendarId: member.calendarId,\r\n          timeMin: start,\r\n          timeMax: end,\r\n          maxResults: 100,\r\n          singleEvents: true,\r\n          orderBy: 'startTime',\r\n          timeZone: timezone\r\n        });\r\n\r\n        console.log(`Events for ${member.name}:`, data.items); // Log events for each member\r\n\r\n        return {\r\n          memberId: member.id,\r\n          memberName: member.name,\r\n          events: data.items || []\r\n        };\r\n      })\r\n    );\r\n\r\n    console.log('All events:', allEvents); // Log the final response\r\n    res.json(allEvents);\r\n  } catch (error) {\r\n    console.error('Calendar API error:', error);\r\n    res.status(500).json({ error: 'Failed to fetch availability for all members' });\r\n  }\r\n});"],"mappings":"AAAAA,GAAG,CAACC,GAAG,CAAC,uBAAuB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnD,IAAI;IACF,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,IAAI,CAACA,IAAI,EAAE,OAAOD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,CAAC;IAEjE,MAAM;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAI,CAAC,GAAGT,GAAG,CAACU,KAAK;IAE1CC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC;;IAElCC,YAAY,CAACC,cAAc,CAACb,IAAI,CAACc,MAAM,CAAC;IACxC,MAAMC,QAAQ,GAAGC,MAAM,CAACD,QAAQ,CAAC;MAAEE,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAEN;IAAa,CAAC,CAAC;;IAEvE;IACA,MAAMO,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCV,OAAO,CAACW,GAAG,CAAC,MAAOC,MAAM,IAAK;MAC5Bd,OAAO,CAACC,GAAG,CAAC,+BAA+Ba,MAAM,CAACC,IAAI,KAAKD,MAAM,CAACE,UAAU,GAAG,CAAC,CAAC,CAAC;;MAElF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,QAAQ,CAACY,MAAM,CAACC,IAAI,CAAC;QAC1CH,UAAU,EAAEF,MAAM,CAACE,UAAU;QAC7BI,OAAO,EAAEvB,KAAK;QACdwB,OAAO,EAAEvB,GAAG;QACZwB,UAAU,EAAE,GAAG;QACfC,YAAY,EAAE,IAAI;QAClBC,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE7B;MACZ,CAAC,CAAC;MAEFI,OAAO,CAACC,GAAG,CAAC,cAAca,MAAM,CAACC,IAAI,GAAG,EAAEE,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC;;MAEvD,OAAO;QACLC,QAAQ,EAAEb,MAAM,CAACc,EAAE;QACnBC,UAAU,EAAEf,MAAM,CAACC,IAAI;QACvBG,MAAM,EAAED,IAAI,CAACS,KAAK,IAAI;MACxB,CAAC;IACH,CAAC,CACH,CAAC;IAED1B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAES,SAAS,CAAC,CAAC,CAAC;IACvCpB,GAAG,CAACI,IAAI,CAACgB,SAAS,CAAC;EACrB,CAAC,CAAC,OAAOf,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3CL,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA+C,CAAC,CAAC;EACjF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}