{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\nimport { DATA_ENDPOINTS, IS_DEVELOPMENT } from '../config/api';\nimport { fetchWithAuth } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetchWithAuth(DATA_ENDPOINTS.MEMBERS);\n        if (!res.ok) {\n          throw new Error(`Failed to fetch members: ${res.status}`);\n        }\n        const data = await res.json();\n        console.log('CalendarGrid - Members data:', data);\n        setMembers(data || []); // Ensure we always have an array\n      } catch (error) {\n        console.error('Error fetching members:', error);\n        setMembers([]); // Set empty array on error to prevent map errors\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      const dayEvents = events.filter(event => {\n        const eventDate = new Date(event.start.dateTime);\n        return eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }) === date.toLocaleDateString('en-US', {\n          timeZone: timezone\n        });\n      });\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        endOfWeek.setHours(23, 59, 59, 999); // Set to end of day\n\n        console.log('Date Range:', {\n          start: startOfWeek.toISOString(),\n          end: endOfWeek.toISOString(),\n          timezone\n        });\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => {\n            const url = `${DATA_ENDPOINTS.AVAILABILITY(member.id)}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`;\n            return fetchWithAuth(url).then(res => {\n              if (!res.ok) {\n                console.error(`Error fetching availability for member ${member.id}: ${res.status}`);\n                return [];\n              }\n              return res.json();\n            }).catch(err => {\n              console.error(`Failed to fetch availability for member ${member.id}:`, err);\n              return [];\n            });\n          });\n          const results = await Promise.all(promises);\n          console.log('API Response for all members:', results);\n          results.forEach((memberEvents, index) => {\n            if (Array.isArray(memberEvents)) {\n              var _members$index;\n              const memberName = ((_members$index = members[index]) === null || _members$index === void 0 ? void 0 : _members$index.name) || 'Unknown';\n              memberEvents.forEach(event => {\n                event.memberName = memberName;\n              });\n              allEvents = [...allEvents, ...memberEvents];\n            }\n          });\n        } else {\n          // Fetch events for single member\n          const url = `${DATA_ENDPOINTS.AVAILABILITY(selectedMember)}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`;\n          try {\n            const res = await fetchWithAuth(url);\n            if (!res.ok && !IS_DEVELOPMENT) {\n              throw new Error(`Failed to fetch availability: ${res.status}`);\n            }\n            const data = await res.json();\n            console.log('API Response for single member:', data);\n            allEvents = data || [];\n          } catch (fetchError) {\n            console.error('Error fetching availability:', fetchError);\n            // In development mode, continue with empty array\n            if (IS_DEVELOPMENT) {\n              console.log('Development mode: continuing with empty events array');\n              allEvents = [];\n            } else {\n              throw fetchError; // Re-throw in production\n            }\n          }\n        }\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped Events:', groupedEvents);\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n        // In development mode, set empty events object\n        if (IS_DEVELOPMENT) {\n          console.log('Development mode: setting empty events object');\n          setEvents({});\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"mLpKF5cXHgu0fkDZsNO3fzzBCQ8=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  var _members$find, _members$find2, _members$find3;\n  const [members, setMembers] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch(DATA_ENDPOINTS.MEMBERS, {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // Process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = dateStr => {\n      const date = new Date(dateStr);\n      return date.getHours() * 60 + date.getMinutes();\n    };\n\n    // Calculate current time indicator position\n    const getCurrentTimePosition = () => {\n      const now = new Date();\n      const selectedDateStr = date.toLocaleDateString('en-US', {\n        timeZone: timezone\n      });\n      const currentDateStr = now.toLocaleDateString('en-US', {\n        timeZone: timezone\n      });\n      if (selectedDateStr === currentDateStr) {\n        const minutes = getMinutesSinceMidnight(now);\n        return `${minutes / 1440 * 100}%`;\n      }\n      return null;\n    };\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n    const formatHourLabel = hour => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes || event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes;\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          return false;\n        });\n        const isBusy = hourEvents.length > 0;\n        const getEventType = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n        const getEventStyles = event => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(event.durationMinutes, 60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = startMinutes / 60 * 100;\n          const heightPercentage = durationInMinutes / 60 * 100;\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: hourEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-details ${getEventType(event)}`,\n            style: getEventStyles(event),\n            \"data-start-time\": event.startMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, `${event.id}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: [memberSlots, getCurrentTimePosition() && hour === Math.floor(getMinutesSinceMidnight(currentTime) / 60) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-indicator\",\n            style: {\n              top: `${getMinutesSinceMidnight(currentTime) % 60 / 60 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        \"data-view\": selectedMember === 'all' ? 'all' : 'single',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), selectedMember === 'all' ? members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${((_members$find = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find === void 0 ? void 0 : _members$find.id) * 60 || 0}, 70%, 60%)`\n              },\n              children: (_members$find2 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find2 === void 0 ? void 0 : _members$find2.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: (_members$find3 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find3 === void 0 ? void 0 : _members$find3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-view-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Switch to Desktop View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"For a better experience viewing multiple team members' schedules, please use a desktop or tablet device.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"O3pRlvVpowgy7xB8QPY3aWQYp6c=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","React","DATA_ENDPOINTS","IS_DEVELOPMENT","fetchWithAuth","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","fetchMembers","res","MEMBERS","ok","Error","status","data","json","console","log","error","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getWeekRangeString","start","end","toLocaleDateString","month","day","year","groupEventsByDay","reduce","acc","dateString","weekday","dayEvents","filter","event","eventDate","dateTime","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","toISOString","allEvents","promises","map","member","url","AVAILABILITY","id","encodeURIComponent","then","catch","err","results","Promise","all","forEach","memberEvents","index","Array","isArray","_members$index","memberName","name","fetchError","groupedEvents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_events$dateString","style","cursor","title","summary","length","DayDetailView","Object","values","flat","onClose","_c","_s2","_members$find","_members$find2","_members$find3","currentTime","setCurrentTime","fetch","credentials","timer","setInterval","clearInterval","formatDate","time","replace","dateEvents","getTimeBlocks","blocks","processedEvents","relevantMembers","m","parseInt","getMinutesSinceMidnight","dateStr","getHours","getMinutes","getCurrentTimePosition","now","selectedDateStr","currentDateStr","minutes","Map","sort","a","b","eventKey","startMinutes","endMinutes","set","displayed","durationMinutes","formatHourLabel","timeDate","timeLabel","hourStartMinutes","hourEndMinutes","memberSlots","memberEventsList","from","hourEvents","eventOverlapsHour","isBusy","getEventType","titleLower","toLowerCase","includes","getEventStyles","durationInMinutes","Math","min","topPercentage","heightPercentage","position","top","height","left","right","zIndex","floor","e","stopPropagation","backgroundColor","charAt","find","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\nimport { DATA_ENDPOINTS, IS_DEVELOPMENT } from '../config/api';\nimport { fetchWithAuth } from '../utils/api';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetchWithAuth(DATA_ENDPOINTS.MEMBERS);\n\n        if (!res.ok) {\n          throw new Error(`Failed to fetch members: ${res.status}`);\n        }\n\n        const data = await res.json();\n        console.log('CalendarGrid - Members data:', data);\n        setMembers(data || []); // Ensure we always have an array\n      } catch (error) {\n        console.error('Error fetching members:', error);\n        setMembers([]); // Set empty array on error to prevent map errors\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        const dayEvents = events.filter((event) => {\n          const eventDate = new Date(event.start.dateTime);\n          return (\n            eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n            date.toLocaleDateString('en-US', { timeZone: timezone })\n          );\n        });\n\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        endOfWeek.setHours(23, 59, 59, 999); // Set to end of day\n\n        console.log('Date Range:', {\n          start: startOfWeek.toISOString(),\n          end: endOfWeek.toISOString(),\n          timezone\n        });\n\n        let allEvents = [];\n\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => {\n            const url = `${DATA_ENDPOINTS.AVAILABILITY(member.id)}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`;\n\n            return fetchWithAuth(url)\n              .then(res => {\n                if (!res.ok) {\n                  console.error(`Error fetching availability for member ${member.id}: ${res.status}`);\n                  return [];\n                }\n                return res.json();\n              })\n              .catch(err => {\n                console.error(`Failed to fetch availability for member ${member.id}:`, err);\n                return [];\n              });\n          });\n\n          const results = await Promise.all(promises);\n          console.log('API Response for all members:', results);\n          results.forEach((memberEvents, index) => {\n            if (Array.isArray(memberEvents)) {\n              const memberName = members[index]?.name || 'Unknown';\n              memberEvents.forEach(event => {\n                event.memberName = memberName;\n              });\n              allEvents = [...allEvents, ...memberEvents];\n            }\n          });\n        } else {\n          // Fetch events for single member\n          const url = `${DATA_ENDPOINTS.AVAILABILITY(selectedMember)}?timezone=${encodeURIComponent(\n            timezone\n          )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`;\n\n          try {\n            const res = await fetchWithAuth(url);\n\n            if (!res.ok && !IS_DEVELOPMENT) {\n              throw new Error(`Failed to fetch availability: ${res.status}`);\n            }\n\n            const data = await res.json();\n            console.log('API Response for single member:', data);\n            allEvents = data || [];\n          } catch (fetchError) {\n            console.error('Error fetching availability:', fetchError);\n            // In development mode, continue with empty array\n            if (IS_DEVELOPMENT) {\n              console.log('Development mode: continuing with empty events array');\n              allEvents = [];\n            } else {\n              throw fetchError; // Re-throw in production\n            }\n          }\n        }\n\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped Events:', groupedEvents);\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n        // In development mode, set empty events object\n        if (IS_DEVELOPMENT) {\n          console.log('Development mode: setting empty events object');\n          setEvents({});\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div\n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch(DATA_ENDPOINTS.MEMBERS, {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // Process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = (dateStr) => {\n      const date = new Date(dateStr);\n      return (date.getHours() * 60) + date.getMinutes();\n    };\n\n    // Calculate current time indicator position\n    const getCurrentTimePosition = () => {\n      const now = new Date();\n      const selectedDateStr = date.toLocaleDateString('en-US', { timeZone: timezone });\n      const currentDateStr = now.toLocaleDateString('en-US', { timeZone: timezone });\n\n      if (selectedDateStr === currentDateStr) {\n        const minutes = getMinutesSinceMidnight(now);\n        return `${(minutes / 1440) * 100}%`;\n      }\n      return null;\n    };\n\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n\n    const formatHourLabel = (hour) => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = (\n            (event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes) ||\n            (event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes)\n          );\n\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n\n          return false;\n        });\n\n        const isBusy = hourEvents.length > 0;\n\n        const getEventType = (event) => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n\n        const getEventStyles = (event) => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(\n            event.durationMinutes,\n            60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = (startMinutes / 60) * 100;\n          const heightPercentage = (durationInMinutes / 60) * 100;\n\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n\n        return (\n          <div\n            key={member.id}\n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {hourEvents.map((event) => (\n              <div\n                key={`${event.id}-${hour}`}\n                className={`event-details ${getEventType(event)}`}\n                style={getEventStyles(event)}\n                data-start-time={event.startMinutes}\n              >\n                <div className=\"event-title\">\n                  {event.summary}\n                </div>\n                <div className=\"event-time\">\n                  <span className=\"time-icon\">⏱️</span>\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n\n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n            {getCurrentTimePosition() && hour === Math.floor(getMinutesSinceMidnight(currentTime) / 60) && (\n              <div\n                className=\"current-time-indicator\"\n                style={{\n                  top: `${((getMinutesSinceMidnight(currentTime) % 60) / 60) * 100}%`\n                }}\n              />\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\" data-view={selectedMember === 'all' ? 'all' : 'single'}>\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {selectedMember === 'all' ? members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{\n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            )) : (\n              <div className=\"member-header\">\n                <div className=\"member-avatar\" style={{\n                  backgroundColor: `hsl(${members.find(m => m.id === parseInt(selectedMember))?.id * 60 || 0}, 70%, 60%)`\n                }}>\n                  {members.find(m => m.id === parseInt(selectedMember))?.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">\n                  {members.find(m => m.id === parseInt(selectedMember))?.name}\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"time-blocks\">\n            {getTimeBlocks()}\n          </div>\n        </div>\n\n        <div className=\"mobile-view-message\">\n          <h3>Switch to Desktop View</h3>\n          <p>For a better experience viewing multiple team members' schedules, please use a desktop or tablet device.</p>\n          <button className=\"action-button\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}