{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      const dayEvents = events.filter(event => {\n        const eventDate = new Date(event.start.dateTime);\n        return eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }) === date.toLocaleDateString('en-US', {\n          timeZone: timezone\n        });\n      });\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  const calculateEventPosition = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const startHour = start.getHours() + start.getMinutes() / 60;\n    const endHour = end.getHours() + end.getMinutes() / 60;\n    const top = `${startHour * 60}px`;\n    const height = `${(endHour - startHour) * 60}px`;\n    return {\n      top,\n      height\n    };\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(async member => {\n            try {\n              const res = await fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n                credentials: 'include'\n              });\n              const events = await res.json();\n              return events.map(event => ({\n                ...event,\n                memberName: member.name,\n                memberId: member.id\n              }));\n            } catch (error) {\n              console.error(`Error fetching events for member ${member.name}:`, error);\n              return [];\n            }\n          });\n          const results = await Promise.all(promises);\n          allEvents = results.flat();\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          });\n          const memberEvents = await res.json();\n          const member = members.find(m => m.id === selectedMember);\n          allEvents = memberEvents.map(event => ({\n            ...event,\n            memberName: member === null || member === void 0 ? void 0 : member.name,\n            memberId: selectedMember\n          }));\n        }\n        console.log('Fetched events:', allEvents); // Debug log\n\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped events:', groupedEvents); // Debug log\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && members.length > 0 && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        const dayEvents = events[dateString] || [];\n        console.log(`Events for ${dateString}:`, dayEvents); // Debug log\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [Array.from({\n              length: 24\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-slot\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-slot-label\",\n                children: i === 0 ? '12 AM' : i < 12 ? `${i} AM` : i === 12 ? '12 PM' : `${i - 12} PM`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)), dayEvents.map(event => {\n              var _event$start, _event$end;\n              if (!((_event$start = event.start) !== null && _event$start !== void 0 && _event$start.dateTime) || !((_event$end = event.end) !== null && _event$end !== void 0 && _event$end.dateTime)) {\n                console.log('Invalid event:', event); // Debug log\n                return null;\n              }\n              const {\n                top,\n                height\n              } = calculateEventPosition(event.start.dateTime, event.end.dateTime);\n              return /*#__PURE__*/_jsxDEV(EventItem, {\n                title: event.summary,\n                start: formatTime(event.start.dateTime),\n                end: formatTime(event.end.dateTime),\n                memberName: selectedMember === 'all' ? event.memberName : null,\n                style: {\n                  top,\n                  height\n                }\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"mLpKF5cXHgu0fkDZsNO3fzzBCQ8=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // Generate a block for each hour (24 hours)\n    for (let hour = 0; hour < 24; hour++) {\n      const hourFormatted = hour.toString().padStart(2, '0');\n      const timeLabel = `${hour === 0 ? '12' : hour > 12 ? hour - 12 : hour}:00 ${hour >= 12 ? 'PM' : 'AM'}`;\n      const memberSlots = members.map(member => {\n        // Get events for this member in this hour\n        const memberEvents = dateEvents.filter(event => {\n          // For team view, match by member name; for individual view match by calendar ID\n          const isForMember = selectedMember === 'all' ? event.memberName === member.name : event.calendarId === member.calendarId;\n          if (!isForMember) return false;\n\n          // Now check if the event overlaps with this hour\n          const eventStartHour = new Date(event.start).getHours();\n          const eventEndHour = new Date(event.end).getHours();\n          const eventEndMinutes = new Date(event.end).getMinutes();\n\n          // If end time is exactly 00:00, we need to consider it as the end of the previous hour\n          const adjustedEndHour = eventEndMinutes === 0 && eventEndHour === 0 ? 24 : eventEndHour;\n\n          // Check if this hour falls within the event's time range\n          return hour >= eventStartHour && hour < adjustedEndHour;\n        });\n        const isBusy = memberEvents.length > 0;\n\n        // Get the color based on the event type\n        const getEventColor = event => {\n          const titleLower = (event.title || '').toLowerCase();\n          if (titleLower.includes('meeting')) return '#4f46e5'; // Indigo\n          if (titleLower.includes('assessment')) return '#ec4899'; // Pink\n          if (titleLower.includes('proxy')) return '#f97316'; // Orange\n          if (titleLower.includes('resume') || titleLower.includes('interview')) return '#14b8a6'; // Teal\n          return '#4f46e5'; // Default - Indigo\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: memberEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-details\",\n            style: {\n              borderLeftColor: getEventColor(event)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), formatTime(new Date(event.start)), \" - \", formatTime(new Date(event.end))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: memberSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getWeekRangeString","start","end","toLocaleDateString","month","day","year","groupEventsByDay","reduce","acc","dateString","weekday","dayEvents","filter","event","eventDate","dateTime","handleWeekChange","direction","prev","newDate","calculateEventPosition","startTime","endTime","startHour","getHours","getMinutes","endHour","top","height","fetchEvents","startOfWeek","endOfWeek","allEvents","promises","map","member","id","encodeURIComponent","toISOString","memberName","name","memberId","results","Promise","all","flat","memberEvents","find","m","log","groupedEvents","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","style","cursor","Array","from","_","_event$start","_event$end","title","summary","DayDetailView","Object","values","onClose","_c","_s2","formatDate","time","dateEvents","getTimeBlocks","blocks","hourFormatted","toString","padStart","timeLabel","memberSlots","isForMember","calendarId","eventStartHour","eventEndHour","eventEndMinutes","adjustedEndHour","isBusy","getEventColor","titleLower","toLowerCase","includes","index","borderLeftColor","e","stopPropagation","backgroundColor","charAt","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        const dayEvents = events.filter((event) => {\n          const eventDate = new Date(event.start.dateTime);\n          return (\n            eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n            date.toLocaleDateString('en-US', { timeZone: timezone })\n          );\n        });\n\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  const calculateEventPosition = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    \n    const startHour = start.getHours() + start.getMinutes() / 60;\n    const endHour = end.getHours() + end.getMinutes() / 60;\n    \n    const top = `${startHour * 60}px`;\n    const height = `${(endHour - startHour) * 60}px`;\n    \n    return { top, height };\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(async member => {\n            try {\n              const res = await fetch(\n                `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                  timezone\n                )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n                { credentials: 'include' }\n              );\n              const events = await res.json();\n              return events.map(event => ({\n                ...event,\n                memberName: member.name,\n                memberId: member.id\n              }));\n            } catch (error) {\n              console.error(`Error fetching events for member ${member.name}:`, error);\n              return [];\n            }\n          });\n\n          const results = await Promise.all(promises);\n          allEvents = results.flat();\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n            { credentials: 'include' }\n          );\n          const memberEvents = await res.json();\n          const member = members.find(m => m.id === selectedMember);\n          allEvents = memberEvents.map(event => ({\n            ...event,\n            memberName: member?.name,\n            memberId: selectedMember\n          }));\n        }\n\n        console.log('Fetched events:', allEvents); // Debug log\n\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped events:', groupedEvents); // Debug log\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && members.length > 0 && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          const dayEvents = events[dateString] || [];\n          console.log(`Events for ${dateString}:`, dayEvents); // Debug log\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div \n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {/* Time slots */}\n                {Array.from({ length: 24 }, (_, i) => (\n                  <div key={i} className=\"time-slot\">\n                    <div className=\"time-slot-label\">\n                      {i === 0 ? '12 AM' : i < 12 ? `${i} AM` : i === 12 ? '12 PM' : `${i - 12} PM`}\n                    </div>\n                  </div>\n                ))}\n\n                {/* Events */}\n                {dayEvents.map((event) => {\n                  if (!event.start?.dateTime || !event.end?.dateTime) {\n                    console.log('Invalid event:', event); // Debug log\n                    return null;\n                  }\n\n                  const { top, height } = calculateEventPosition(\n                    event.start.dateTime,\n                    event.end.dateTime\n                  );\n\n                  return (\n                    <EventItem\n                      key={event.id}\n                      title={event.summary}\n                      start={formatTime(event.start.dateTime)}\n                      end={formatTime(event.end.dateTime)}\n                      memberName={selectedMember === 'all' ? event.memberName : null}\n                      style={{ top, height }}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n    \n    // Generate a block for each hour (24 hours)\n    for (let hour = 0; hour < 24; hour++) {\n      const hourFormatted = hour.toString().padStart(2, '0');\n      const timeLabel = `${hour === 0 ? '12' : hour > 12 ? hour - 12 : hour}:00 ${hour >= 12 ? 'PM' : 'AM'}`;\n      \n      const memberSlots = members.map(member => {\n        // Get events for this member in this hour\n        const memberEvents = dateEvents.filter(event => {\n          // For team view, match by member name; for individual view match by calendar ID\n          const isForMember = selectedMember === 'all' \n            ? event.memberName === member.name \n            : event.calendarId === member.calendarId;\n          \n          if (!isForMember) return false;\n          \n          // Now check if the event overlaps with this hour\n          const eventStartHour = new Date(event.start).getHours();\n          const eventEndHour = new Date(event.end).getHours();\n          const eventEndMinutes = new Date(event.end).getMinutes();\n          \n          // If end time is exactly 00:00, we need to consider it as the end of the previous hour\n          const adjustedEndHour = eventEndMinutes === 0 && eventEndHour === 0 ? 24 : eventEndHour;\n          \n          // Check if this hour falls within the event's time range\n          return hour >= eventStartHour && hour < adjustedEndHour;\n        });\n        \n        const isBusy = memberEvents.length > 0;\n        \n        // Get the color based on the event type\n        const getEventColor = (event) => {\n          const titleLower = (event.title || '').toLowerCase();\n          if (titleLower.includes('meeting')) return '#4f46e5'; // Indigo\n          if (titleLower.includes('assessment')) return '#ec4899'; // Pink\n          if (titleLower.includes('proxy')) return '#f97316'; // Orange\n          if (titleLower.includes('resume') || titleLower.includes('interview')) return '#14b8a6'; // Teal\n          return '#4f46e5'; // Default - Indigo\n        };\n        \n        return (\n          <div \n            key={member.id} \n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {memberEvents.map((event, index) => (\n              <div \n                key={index} \n                className=\"event-details\"\n                style={{ borderLeftColor: getEventColor(event) }}\n              >\n                <div className=\"event-title\">{event.title}</div>\n                <div className=\"event-time\">\n                  <span className=\"time-icon\">⏱️</span>\n                  {formatTime(new Date(event.start))} - {formatTime(new Date(event.end))}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n      \n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n          </div>\n        </div>\n      );\n    }\n    \n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\">\n          {/* Fixed header row with member names */}\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            ))}\n          </div>\n\n          {/* Time blocks */}\n          <div className=\"time-blocks\">\n            {getTimeBlocks()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}