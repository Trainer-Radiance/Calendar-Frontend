{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      // Ensure we're working with the local timezone\n      dayDate.setHours(0, 0, 0, 0);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    console.log('All events:', events); // Debug log for all events\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      const dayEvents = events.filter(event => {\n        const eventDate = new Date(event.start.dateTime);\n        // Normalize both dates to start of day for comparison\n        const eventDateNormalized = new Date(eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }));\n        const dateNormalized = new Date(date.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }));\n        return eventDateNormalized.getTime() === dateNormalized.getTime();\n      });\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          }).then(res => res.json()));\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          });\n          allEvents = await res.json();\n        }\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"mLpKF5cXHgu0fkDZsNO3fzzBCQ8=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  var _members$find, _members$find2, _members$find3;\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // First, let's process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = dateStr => {\n      const date = new Date(dateStr);\n      const timeStr = date.toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n        timeZone: timezone\n      });\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return hours * 60 + minutes;\n    };\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n    const formatHourLabel = hour => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      });\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes || event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes;\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          return false;\n        });\n        const isBusy = hourEvents.length > 0;\n        const getEventType = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n        const getEventStyles = event => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(event.durationMinutes, 60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = startMinutes / 60 * 100;\n          const heightPercentage = durationInMinutes / 60 * 100;\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: hourEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-details ${getEventType(event)}`,\n            style: getEventStyles(event),\n            \"data-start-time\": event.startMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, `${event.id}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: memberSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        \"data-view\": selectedMember === 'all' ? 'all' : 'single',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), selectedMember === 'all' ? members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)) :\n          /*#__PURE__*/\n          // Show only the selected member's header\n          _jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${((_members$find = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find === void 0 ? void 0 : _members$find.id) * 60 || 0}, 70%, 60%)`\n              },\n              children: (_members$find2 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find2 === void 0 ? void 0 : _members$find2.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: (_members$find3 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find3 === void 0 ? void 0 : _members$find3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks().map((block, index) => {\n            // If viewing individual member, modify the slots-row to only show that member\n            const modifiedBlock = /*#__PURE__*/React.cloneElement(block, {\n              children: [block.props.children[0],\n              /*#__PURE__*/\n              // Keep the time label\n              _jsxDEV(\"div\", {\n                className: \"slots-row\",\n                children: selectedMember === 'all' ? block.props.children[1].props.children // Show all members\n                : block.props.children[1].props.children.find(slot =>\n                // Show only selected member\n                slot.key === selectedMember.toString())\n              }, \"slots\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this)]\n            });\n            return modifiedBlock;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","React","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getWeekRangeString","start","end","toLocaleDateString","month","day","year","groupEventsByDay","log","reduce","acc","dateString","weekday","dayEvents","filter","event","eventDate","dateTime","eventDateNormalized","dateNormalized","getTime","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","allEvents","promises","map","member","id","encodeURIComponent","toISOString","then","results","Promise","all","forEach","memberEvents","index","memberName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_events$dateString","style","cursor","title","summary","length","DayDetailView","Object","values","flat","onClose","_c","_s2","_members$find","_members$find2","_members$find3","formatDate","time","dateEvents","getTimeBlocks","blocks","processedEvents","relevantMembers","m","parseInt","getMinutesSinceMidnight","dateStr","timeStr","toLocaleString","hours","minutes","split","Number","Map","sort","a","b","eventKey","startMinutes","endMinutes","set","displayed","durationMinutes","formatHourLabel","timeDate","timeLabel","hourStartMinutes","hourEndMinutes","memberSlots","memberEventsList","Array","from","hourEvents","eventOverlapsHour","isBusy","getEventType","titleLower","toLowerCase","includes","getEventStyles","durationInMinutes","Math","min","topPercentage","heightPercentage","position","top","height","left","right","zIndex","e","stopPropagation","backgroundColor","charAt","find","block","modifiedBlock","cloneElement","props","slot","key","toString","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      // Ensure we're working with the local timezone\n      dayDate.setHours(0, 0, 0, 0);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      console.log('All events:', events); // Debug log for all events\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        const dayEvents = events.filter((event) => {\n          const eventDate = new Date(event.start.dateTime);\n          // Normalize both dates to start of day for comparison\n          const eventDateNormalized = new Date(eventDate.toLocaleDateString('en-US', { timeZone: timezone }));\n          const dateNormalized = new Date(date.toLocaleDateString('en-US', { timeZone: timezone }));\n          return eventDateNormalized.getTime() === dateNormalized.getTime();\n        });\n\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member =>\n            fetch(\n              `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                timezone\n              )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n              { credentials: 'include' }\n            ).then(res => res.json())\n          );\n\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n            { credentials: 'include' }\n          );\n          allEvents = await res.json();\n        }\n\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div \n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n    \n    // First, let's process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n    \n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = (dateStr) => {\n      const date = new Date(dateStr);\n      const timeStr = date.toLocaleString('en-US', { \n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n        timeZone: timezone \n      });\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return (hours * 60) + minutes;\n    };\n\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      \n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      \n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        \n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n\n    const formatHourLabel = (hour) => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      });\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      \n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n        \n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n          \n          // Check if event overlaps with this hour\n          const eventOverlapsHour = (\n            (event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes) ||\n            (event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes)\n          );\n          \n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          \n          return false;\n        });\n\n        const isBusy = hourEvents.length > 0;\n        \n        const getEventType = (event) => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n\n        const getEventStyles = (event) => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(\n            event.durationMinutes,\n            60 - startMinutes // Cap at remaining minutes in the hour\n          );\n          \n          // Calculate percentage-based positioning\n          const topPercentage = (startMinutes / 60) * 100;\n          const heightPercentage = (durationInMinutes / 60) * 100;\n          \n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        \n        return (\n          <div \n            key={member.id} \n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {hourEvents.map((event) => (\n              <div \n                key={`${event.id}-${hour}`}\n                className={`event-details ${getEventType(event)}`}\n                style={getEventStyles(event)}\n                data-start-time={event.startMinutes}\n              >\n                <div className=\"event-title\">\n                  {event.summary}\n                </div>\n                <div className=\"event-time\">\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n      \n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n          </div>\n        </div>\n      );\n    }\n    \n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\" data-view={selectedMember === 'all' ? 'all' : 'single'}>\n          {/* Fixed header row with member names */}\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {selectedMember === 'all' ? members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            )) : (\n              // Show only the selected member's header\n              <div className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${members.find(m => m.id === parseInt(selectedMember))?.id * 60 || 0}, 70%, 60%)`\n                }}>\n                  {members.find(m => m.id === parseInt(selectedMember))?.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">\n                  {members.find(m => m.id === parseInt(selectedMember))?.name}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* Time blocks */}\n          <div className=\"time-blocks\">\n            {getTimeBlocks().map((block, index) => {\n              // If viewing individual member, modify the slots-row to only show that member\n              const modifiedBlock = React.cloneElement(block, {\n                children: [\n                  block.props.children[0], // Keep the time label\n                  <div key=\"slots\" className=\"slots-row\">\n                    {selectedMember === 'all' \n                      ? block.props.children[1].props.children // Show all members\n                      : block.props.children[1].props.children.find(slot => // Show only selected member\n                          slot.key === selectedMember.toString()\n                        )\n                    }\n                  </div>\n                ]\n              });\n              return modifiedBlock;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}