{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      const dayEvents = events.filter(event => {\n        const eventDate = new Date(event.start.dateTime);\n        return eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }) === date.toLocaleDateString('en-US', {\n          timeZone: timezone\n        });\n      });\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          }).then(res => res.json()));\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          });\n          allEvents = await res.json();\n        }\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"mLpKF5cXHgu0fkDZsNO3fzzBCQ8=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone\n}) => {\n  _s2();\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatEventTime = dateTime => {\n    const date = new Date(dateTime);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 || 12;\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${ampm}`;\n  };\n\n  // Generate time slots for 24 hours\n  const timeSlots = Array.from({\n    length: 24\n  }, (_, i) => {\n    const hour = i;\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:00 ${ampm}`;\n  });\n\n  // Check if a member has an event at a specific hour\n  const getMemberStatus = (memberId, hour) => {\n    const memberEvents = events.filter(event => {\n      var _members$find;\n      return event.memberName === ((_members$find = members.find(m => m.id === memberId)) === null || _members$find === void 0 ? void 0 : _members$find.name);\n    });\n    const hourStart = new Date(date);\n    hourStart.setHours(hour, 0, 0, 0);\n    const hourEnd = new Date(date);\n    hourEnd.setHours(hour + 1, 0, 0, 0);\n    const conflictingEvents = memberEvents.filter(event => {\n      const eventStart = new Date(event.start.dateTime);\n      const eventEnd = new Date(event.end.dateTime);\n      return eventStart < hourEnd && eventEnd > hourStart;\n    });\n    return {\n      status: conflictingEvents.length > 0 ? 'busy' : 'free',\n      events: conflictingEvents\n    };\n  };\n\n  // Get current time indicator position\n  const getCurrentTimePosition = () => {\n    const now = new Date();\n    if (date.toDateString() !== now.toDateString()) return null;\n    const minutes = now.getHours() * 60 + now.getMinutes();\n    return `${minutes / (24 * 60) * 100}%`;\n  };\n\n  // Format timezone for display\n  const formatTimezoneDisplay = () => {\n    const options = {\n      timeZoneName: 'short'\n    };\n    const timeZoneName = new Date().toLocaleString('en-US', {\n      ...options,\n      timeZone: timezone\n    });\n    return timeZoneName.split(' ').pop();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", formatTimezoneDisplay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"availability-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-header\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), timeSlots.map((timeSlot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-slot\",\n              children: timeSlot\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"member-avatar\",\n                style: {\n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                },\n                children: member.name.charAt(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"member-name\",\n                children: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), timeSlots.map((_, index) => {\n              const hour = index;\n              const {\n                status,\n                events\n              } = getMemberStatus(member.id, hour);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `availability-slot ${status}`,\n                title: events.length > 0 ? events.map(e => `${e.summary}\\n${formatEventTime(e.start.dateTime)} - ${formatEventTime(e.end.dateTime)}`).join('\\n') : 'Available',\n                children: events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-title\",\n                    children: events[0].summary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-time\",\n                    children: [formatEventTime(events[0].start.dateTime), \" - \", formatEventTime(events[0].end.dateTime)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 25\n                }, this)\n              }, hour, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this);\n            })]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)), getCurrentTimePosition() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-indicator\",\n            style: {\n              top: getCurrentTimePosition()\n            },\n            \"data-time\": formatEventTime(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getWeekRangeString","start","end","toLocaleDateString","month","day","year","groupEventsByDay","reduce","acc","dateString","weekday","dayEvents","filter","event","eventDate","dateTime","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","allEvents","promises","map","member","id","encodeURIComponent","toISOString","then","results","Promise","all","forEach","memberEvents","index","memberName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_events$dateString","style","cursor","title","summary","length","DayDetailView","Object","values","flat","onClose","_c","_s2","formatDate","formatEventTime","hours","getHours","minutes","getMinutes","ampm","formattedHours","formattedMinutes","toString","padStart","timeSlots","Array","from","_","displayHour","getMemberStatus","memberId","_members$find","find","m","hourStart","hourEnd","conflictingEvents","eventStart","eventEnd","status","getCurrentTimePosition","now","toDateString","formatTimezoneDisplay","options","timeZoneName","toLocaleString","split","pop","e","stopPropagation","timeSlot","backgroundColor","charAt","join","top","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        const dayEvents = events.filter((event) => {\n          const eventDate = new Date(event.start.dateTime);\n          return (\n            eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n            date.toLocaleDateString('en-US', { timeZone: timezone })\n          );\n        });\n\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member =>\n            fetch(\n              `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                timezone\n              )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n              { credentials: 'include' }\n            ).then(res => res.json())\n          );\n\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n            { credentials: 'include' }\n          );\n          allEvents = await res.json();\n        }\n\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div \n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone }) => {\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatEventTime = (dateTime) => {\n    const date = new Date(dateTime);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 || 12;\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${ampm}`;\n  };\n\n  // Generate time slots for 24 hours\n  const timeSlots = Array.from({ length: 24 }, (_, i) => {\n    const hour = i;\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:00 ${ampm}`;\n  });\n\n  // Check if a member has an event at a specific hour\n  const getMemberStatus = (memberId, hour) => {\n    const memberEvents = events.filter(event => event.memberName === members.find(m => m.id === memberId)?.name);\n    const hourStart = new Date(date);\n    hourStart.setHours(hour, 0, 0, 0);\n    const hourEnd = new Date(date);\n    hourEnd.setHours(hour + 1, 0, 0, 0);\n\n    const conflictingEvents = memberEvents.filter(event => {\n      const eventStart = new Date(event.start.dateTime);\n      const eventEnd = new Date(event.end.dateTime);\n      return eventStart < hourEnd && eventEnd > hourStart;\n    });\n\n    return {\n      status: conflictingEvents.length > 0 ? 'busy' : 'free',\n      events: conflictingEvents\n    };\n  };\n\n  // Get current time indicator position\n  const getCurrentTimePosition = () => {\n    const now = new Date();\n    if (date.toDateString() !== now.toDateString()) return null;\n    \n    const minutes = now.getHours() * 60 + now.getMinutes();\n    return `${(minutes / (24 * 60)) * 100}%`;\n  };\n\n  // Format timezone for display\n  const formatTimezoneDisplay = () => {\n    const options = { timeZoneName: 'short' };\n    const timeZoneName = new Date().toLocaleString('en-US', { ...options, timeZone: timezone });\n    return timeZoneName.split(' ').pop();\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {formatTimezoneDisplay()}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n        <div className=\"day-detail-content\">\n          <div className=\"availability-grid\">\n            <div className=\"time-column\">\n              <div className=\"member-header\">Time</div>\n              {timeSlots.map((timeSlot, index) => (\n                <div key={index} className=\"time-slot\">\n                  {timeSlot}\n                </div>\n              ))}\n            </div>\n            {members.map(member => (\n              <div key={member.id} className=\"member-column\">\n                <div className=\"member-header\">\n                  <div className=\"member-avatar\" style={{ \n                    backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                  }}>\n                    {member.name.charAt(0)}\n                  </div>\n                  <div className=\"member-name\">{member.name}</div>\n                </div>\n                {timeSlots.map((_, index) => {\n                  const hour = index;\n                  const { status, events } = getMemberStatus(member.id, hour);\n                  return (\n                    <div \n                      key={hour} \n                      className={`availability-slot ${status}`}\n                      title={events.length > 0 ? events.map(e => \n                        `${e.summary}\\n${formatEventTime(e.start.dateTime)} - ${formatEventTime(e.end.dateTime)}`\n                      ).join('\\n') : 'Available'}\n                    >\n                      {events.length > 0 && (\n                        <div className=\"event-indicator\">\n                          <div className=\"event-title\">{events[0].summary}</div>\n                          <div className=\"event-time\">\n                            {formatEventTime(events[0].start.dateTime)} - {formatEventTime(events[0].end.dateTime)}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n            {getCurrentTimePosition() && (\n              <div \n                className=\"current-time-indicator\"\n                style={{ top: getCurrentTimePosition() }}\n                data-time={formatEventTime(new Date())}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}