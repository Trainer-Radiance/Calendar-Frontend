{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    // Get the current day (0-6, 0 being Sunday)\n    const currentDay = date.getDay();\n    // Calculate the difference to get to Sunday\n    const diff = date.getDate() - currentDay;\n    date.setDate(diff);\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const startDate = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(startDate);\n      dayDate.setDate(startDate.getDate() + i);\n      // Ensure we're working with the local timezone\n      dayDate.setHours(0, 0, 0, 0);\n      console.log('Generated day:', {\n        day: dayDate.toLocaleDateString('en-US', {\n          weekday: 'long'\n        }),\n        date: dayDate.toISOString(),\n        timestamp: dayDate.getTime()\n      });\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    console.log('All events:', events);\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      console.log('Processing date:', dateString);\n      const dayEvents = events.filter(event => {\n        var _event$start;\n        if (!((_event$start = event.start) !== null && _event$start !== void 0 && _event$start.dateTime)) {\n          console.log('Event missing start time:', event);\n          return false;\n        }\n        const eventDate = new Date(event.start.dateTime);\n        // Set both dates to midnight for comparison\n        eventDate.setHours(0, 0, 0, 0);\n        const compareDate = new Date(date);\n        compareDate.setHours(0, 0, 0, 0);\n        const isSameDay = eventDate.getFullYear() === compareDate.getFullYear() && eventDate.getMonth() === compareDate.getMonth() && eventDate.getDate() === compareDate.getDate();\n        console.log('Event comparison:', {\n          event: event.summary,\n          eventDate: eventDate.toISOString(),\n          compareDate: compareDate.toISOString(),\n          matches: isSameDay\n        });\n        return isSameDay;\n      });\n      console.log(`Events for ${dateString}:`, dayEvents);\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          }).then(res => res.json()));\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          });\n          allEvents = await res.json();\n        }\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"zuwxHlCAe6JgZZ00yMIH+i4bni4=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  var _members$find, _members$find2, _members$find3;\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // First, let's process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = dateStr => {\n      const date = new Date(dateStr);\n      const timeStr = date.toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n        timeZone: timezone\n      });\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return hours * 60 + minutes;\n    };\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n    const formatHourLabel = hour => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      });\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes || event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes;\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          return false;\n        });\n        const isBusy = hourEvents.length > 0;\n        const getEventType = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n        const getEventStyles = event => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(event.durationMinutes, 60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = startMinutes / 60 * 100;\n          const heightPercentage = durationInMinutes / 60 * 100;\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: hourEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-details ${getEventType(event)}`,\n            style: getEventStyles(event),\n            \"data-start-time\": event.startMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, `${event.id}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: memberSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        \"data-view\": selectedMember === 'all' ? 'all' : 'single',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), selectedMember === 'all' ? members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)) :\n          /*#__PURE__*/\n          // Show only the selected member's header\n          _jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${((_members$find = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find === void 0 ? void 0 : _members$find.id) * 60 || 0}, 70%, 60%)`\n              },\n              children: (_members$find2 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find2 === void 0 ? void 0 : _members$find2.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: (_members$find3 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find3 === void 0 ? void 0 : _members$find3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks().map((block, index) => {\n            // If viewing individual member, modify the slots-row to only show that member\n            const modifiedBlock = /*#__PURE__*/React.cloneElement(block, {\n              children: [block.props.children[0],\n              /*#__PURE__*/\n              // Keep the time label\n              _jsxDEV(\"div\", {\n                className: \"slots-row\",\n                children: selectedMember === 'all' ? block.props.children[1].props.children // Show all members\n                : block.props.children[1].props.children.find(slot =>\n                // Show only selected member\n                slot.key === selectedMember.toString())\n              }, \"slots\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)]\n            });\n            return modifiedBlock;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","React","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","currentDay","getDay","diff","getDate","setDate","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","startDate","i","dayDate","log","day","toLocaleDateString","weekday","toISOString","timestamp","getTime","push","getWeekRangeString","start","end","month","year","groupEventsByDay","reduce","acc","dateString","dayEvents","filter","event","_event$start","dateTime","eventDate","compareDate","isSameDay","getFullYear","getMonth","summary","matches","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","allEvents","promises","map","member","id","encodeURIComponent","then","results","Promise","all","forEach","memberEvents","index","memberName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_events$dateString","style","cursor","title","length","DayDetailView","Object","values","flat","onClose","_c","_s2","_members$find","_members$find2","_members$find3","formatDate","time","dateEvents","getTimeBlocks","blocks","processedEvents","relevantMembers","m","parseInt","getMinutesSinceMidnight","dateStr","timeStr","toLocaleString","hours","minutes","split","Number","Map","sort","a","b","eventKey","startMinutes","endMinutes","set","displayed","durationMinutes","formatHourLabel","timeDate","timeLabel","hourStartMinutes","hourEndMinutes","memberSlots","memberEventsList","Array","from","hourEvents","eventOverlapsHour","isBusy","getEventType","titleLower","toLowerCase","includes","getEventStyles","durationInMinutes","Math","min","topPercentage","heightPercentage","position","top","height","left","right","zIndex","e","stopPropagation","backgroundColor","charAt","find","block","modifiedBlock","cloneElement","props","slot","key","toString","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport React from 'react';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    // Get the current day (0-6, 0 being Sunday)\n    const currentDay = date.getDay();\n    // Calculate the difference to get to Sunday\n    const diff = date.getDate() - currentDay;\n    date.setDate(diff);\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const startDate = new Date(currentWeekStart);\n    \n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(startDate);\n      dayDate.setDate(startDate.getDate() + i);\n      // Ensure we're working with the local timezone\n      dayDate.setHours(0, 0, 0, 0);\n      console.log('Generated day:', {\n        day: dayDate.toLocaleDateString('en-US', { weekday: 'long' }),\n        date: dayDate.toISOString(),\n        timestamp: dayDate.getTime()\n      });\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      console.log('All events:', events);\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        console.log('Processing date:', dateString);\n\n        const dayEvents = events.filter((event) => {\n          if (!event.start?.dateTime) {\n            console.log('Event missing start time:', event);\n            return false;\n          }\n\n          const eventDate = new Date(event.start.dateTime);\n          // Set both dates to midnight for comparison\n          eventDate.setHours(0, 0, 0, 0);\n          const compareDate = new Date(date);\n          compareDate.setHours(0, 0, 0, 0);\n\n          const isSameDay = eventDate.getFullYear() === compareDate.getFullYear() &&\n                           eventDate.getMonth() === compareDate.getMonth() &&\n                           eventDate.getDate() === compareDate.getDate();\n          \n          console.log('Event comparison:', {\n            event: event.summary,\n            eventDate: eventDate.toISOString(),\n            compareDate: compareDate.toISOString(),\n            matches: isSameDay\n          });\n\n          return isSameDay;\n        });\n\n        console.log(`Events for ${dateString}:`, dayEvents);\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member =>\n            fetch(\n              `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                timezone\n              )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n              { credentials: 'include' }\n            ).then(res => res.json())\n          );\n\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n            { credentials: 'include' }\n          );\n          allEvents = await res.json();\n        }\n\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div \n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n    \n    // First, let's process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n    \n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = (dateStr) => {\n      const date = new Date(dateStr);\n      const timeStr = date.toLocaleString('en-US', { \n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n        timeZone: timezone \n      });\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return (hours * 60) + minutes;\n    };\n\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      \n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      \n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        \n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n\n    const formatHourLabel = (hour) => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      });\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      \n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n        \n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n          \n          // Check if event overlaps with this hour\n          const eventOverlapsHour = (\n            (event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes) ||\n            (event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes)\n          );\n          \n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          \n          return false;\n        });\n\n        const isBusy = hourEvents.length > 0;\n        \n        const getEventType = (event) => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n\n        const getEventStyles = (event) => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(\n            event.durationMinutes,\n            60 - startMinutes // Cap at remaining minutes in the hour\n          );\n          \n          // Calculate percentage-based positioning\n          const topPercentage = (startMinutes / 60) * 100;\n          const heightPercentage = (durationInMinutes / 60) * 100;\n          \n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        \n        return (\n          <div \n            key={member.id} \n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {hourEvents.map((event) => (\n              <div \n                key={`${event.id}-${hour}`}\n                className={`event-details ${getEventType(event)}`}\n                style={getEventStyles(event)}\n                data-start-time={event.startMinutes}\n              >\n                <div className=\"event-title\">\n                  {event.summary}\n                </div>\n                <div className=\"event-time\">\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n      \n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n          </div>\n        </div>\n      );\n    }\n    \n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\" data-view={selectedMember === 'all' ? 'all' : 'single'}>\n          {/* Fixed header row with member names */}\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {selectedMember === 'all' ? members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            )) : (\n              // Show only the selected member's header\n              <div className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${members.find(m => m.id === parseInt(selectedMember))?.id * 60 || 0}, 70%, 60%)`\n                }}>\n                  {members.find(m => m.id === parseInt(selectedMember))?.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">\n                  {members.find(m => m.id === parseInt(selectedMember))?.name}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* Time blocks */}\n          <div className=\"time-blocks\">\n            {getTimeBlocks().map((block, index) => {\n              // If viewing individual member, modify the slots-row to only show that member\n              const modifiedBlock = React.cloneElement(block, {\n                children: [\n                  block.props.children[0], // Keep the time label\n                  <div key=\"slots\" className=\"slots-row\">\n                    {selectedMember === 'all' \n                      ? block.props.children[1].props.children // Show all members\n                      : block.props.children[1].props.children.find(slot => // Show only selected member\n                          slot.key === selectedMember.toString()\n                        )\n                    }\n                  </div>\n                ]\n              });\n              return modifiedBlock;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}