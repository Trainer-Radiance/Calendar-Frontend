{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\DayDetailView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s();\n  var _members$find, _members$find2, _members$find3;\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // First, let's process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = dateStr => {\n      const date = new Date(dateStr);\n      const timeStr = date.toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n        timeZone: timezone\n      });\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return hours * 60 + minutes;\n    };\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n    const formatHourLabel = hour => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      });\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes || event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes;\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          return false;\n        });\n        const isBusy = hourEvents.length > 0;\n        const getEventType = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n        const getEventStyles = event => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(event.durationMinutes, 60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = startMinutes / 60 * 100;\n          const heightPercentage = durationInMinutes / 60 * 100;\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: hourEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-details ${getEventType(event)}`,\n            style: getEventStyles(event),\n            \"data-start-time\": event.startMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, `${event.id}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: memberSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        \"data-view\": selectedMember === 'all' ? 'all' : 'single',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), selectedMember === 'all' ? members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)) :\n          /*#__PURE__*/\n          // Show only the selected member's header\n          _jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${((_members$find = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find === void 0 ? void 0 : _members$find.id) * 60 || 0}, 70%, 60%)`\n              },\n              children: (_members$find2 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find2 === void 0 ? void 0 : _members$find2.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: (_members$find3 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find3 === void 0 ? void 0 : _members$find3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks().map((block, index) => {\n            // If viewing individual member, modify the slots-row to only show that member\n            const modifiedBlock = /*#__PURE__*/React.cloneElement(block, {\n              children: [block.props.children[0],\n              /*#__PURE__*/\n              // Keep the time label\n              _jsxDEV(\"div\", {\n                className: \"slots-row\",\n                children: selectedMember === 'all' ? block.props.children[1].props.children // Show all members\n                : block.props.children[1].props.children.find(slot =>\n                // Show only selected member\n                slot.key === selectedMember.toString())\n              }, \"slots\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            });\n            return modifiedBlock;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c = DayDetailView;\nvar _c;\n$RefreshReg$(_c, \"DayDetailView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DayDetailView","date","events","onClose","timezone","selectedMember","_s","_members$find","_members$find2","_members$find3","members","setMembers","fetchMembers","res","fetch","credentials","data","json","error","console","formatDate","toLocaleDateString","weekday","year","month","day","timeZone","formatTime","time","Date","toLocaleTimeString","hour","minute","hour12","dateEvents","filter","event","eventDate","start","dateTime","getTimeBlocks","blocks","processedEvents","relevantMembers","m","id","parseInt","getMinutesSinceMidnight","dateStr","timeStr","toLocaleString","hours","minutes","split","map","Number","forEach","member","Map","memberEvents","memberName","name","sort","a","b","eventKey","startMinutes","endMinutes","end","set","displayed","durationMinutes","formatHourLabel","timeDate","setHours","timeLabel","hourStartMinutes","hourEndMinutes","memberSlots","memberEventsList","Array","from","values","hourEvents","eventOverlapsHour","isBusy","length","getEventType","titleLower","summary","toLowerCase","includes","getEventStyles","durationInMinutes","Math","min","topPercentage","heightPercentage","position","top","height","left","right","zIndex","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","push","onClick","e","stopPropagation","backgroundColor","charAt","find","block","index","modifiedBlock","cloneElement","props","slot","key","toString","_c","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/DayDetailView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport const DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\r\n  const [members, setMembers] = useState([]);\r\n\r\n  // Fetch members list\r\n  useEffect(() => {\r\n    const fetchMembers = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/members', {\r\n          credentials: 'include',\r\n        });\r\n        const data = await res.json();\r\n        setMembers(data);\r\n      } catch (error) {\r\n        console.error('Error fetching members:', error);\r\n      }\r\n    };\r\n    fetchMembers();\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      timeZone: timezone\r\n    });\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    return new Date(time).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true,\r\n      timeZone: timezone\r\n    });\r\n  };\r\n\r\n  // Filter events for the selected date\r\n  const dateEvents = events.filter(event => {\r\n    const eventDate = new Date(event.start.dateTime);\r\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \r\n           date.toLocaleDateString('en-US', { timeZone: timezone });\r\n  });\r\n\r\n  // Group events by time block\r\n  const getTimeBlocks = () => {\r\n    const blocks = [];\r\n    \r\n    // First, let's process the events and track their display status\r\n    const processedEvents = {};\r\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\r\n    \r\n    // Function to calculate minutes since midnight\r\n    const getMinutesSinceMidnight = (dateStr) => {\r\n      const date = new Date(dateStr);\r\n      const timeStr = date.toLocaleString('en-US', { \r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        hour12: false,\r\n        timeZone: timezone \r\n      });\r\n      const [hours, minutes] = timeStr.split(':').map(Number);\r\n      return (hours * 60) + minutes;\r\n    };\r\n\r\n    relevantMembers.forEach(member => {\r\n      processedEvents[member.id] = new Map();\r\n      \r\n      const memberEvents = dateEvents.filter(event => {\r\n        if (selectedMember === 'all') {\r\n          return event.memberName === member.name;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\r\n      \r\n      memberEvents.forEach(event => {\r\n        const eventKey = `${event.id}-${event.start.dateTime}`;\r\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\r\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\r\n        \r\n        processedEvents[member.id].set(eventKey, {\r\n          ...event,\r\n          displayed: false,\r\n          startMinutes,\r\n          endMinutes,\r\n          durationMinutes: endMinutes - startMinutes\r\n        });\r\n      });\r\n    });\r\n\r\n    const formatHourLabel = (hour) => {\r\n      const timeDate = new Date(date);\r\n      timeDate.setHours(hour, 0, 0, 0);\r\n      return timeDate.toLocaleTimeString('en-US', {\r\n        hour: 'numeric',\r\n        hour12: true,\r\n        timeZone: timezone\r\n      });\r\n    };\r\n\r\n    // Generate blocks for each hour\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      const timeLabel = formatHourLabel(hour);\r\n      const hourStartMinutes = hour * 60;\r\n      const hourEndMinutes = (hour + 1) * 60;\r\n      \r\n      const memberSlots = relevantMembers.map(member => {\r\n        const memberEventsList = Array.from(processedEvents[member.id].values());\r\n        \r\n        // Get all events that overlap with this hour\r\n        const hourEvents = memberEventsList.filter(event => {\r\n          if (event.displayed) return false;\r\n          \r\n          // Check if event overlaps with this hour\r\n          const eventOverlapsHour = (\r\n            (event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes) ||\r\n            (event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes)\r\n          );\r\n          \r\n          if (eventOverlapsHour) {\r\n            event.displayed = true;\r\n            return true;\r\n          }\r\n          \r\n          return false;\r\n        });\r\n\r\n        const isBusy = hourEvents.length > 0;\r\n        \r\n        const getEventType = (event) => {\r\n          const titleLower = (event.summary || '').toLowerCase();\r\n          if (titleLower.includes('meeting')) return 'meeting';\r\n          if (titleLower.includes('assessment')) return 'assessment';\r\n          if (titleLower.includes('half day')) return 'half-day';\r\n          if (titleLower.includes('training')) return 'training';\r\n          return 'default';\r\n        };\r\n\r\n        const getEventStyles = (event) => {\r\n          // Calculate position based on minutes since start of day\r\n          const startMinutes = event.startMinutes % 60;\r\n          const durationInMinutes = Math.min(\r\n            event.durationMinutes,\r\n            60 - startMinutes // Cap at remaining minutes in the hour\r\n          );\r\n          \r\n          // Calculate percentage-based positioning\r\n          const topPercentage = (startMinutes / 60) * 100;\r\n          const heightPercentage = (durationInMinutes / 60) * 100;\r\n          \r\n          return {\r\n            position: 'absolute',\r\n            top: `${topPercentage}%`,\r\n            height: `${heightPercentage}%`,\r\n            left: '0',\r\n            right: '0',\r\n            zIndex: event.startMinutes\r\n          };\r\n        };\r\n        \r\n        return (\r\n          <div \r\n            key={member.id} \r\n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\r\n          >\r\n            {hourEvents.map((event) => (\r\n              <div \r\n                key={`${event.id}-${hour}`}\r\n                className={`event-details ${getEventType(event)}`}\r\n                style={getEventStyles(event)}\r\n                data-start-time={event.startMinutes}\r\n              >\r\n                <div className=\"event-title\">\r\n                  {event.summary}\r\n                </div>\r\n                <div className=\"event-time\">\r\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      });\r\n      \r\n      blocks.push(\r\n        <div key={hour} className=\"time-block\">\r\n          <div className=\"time-label\">{timeLabel}</div>\r\n          <div className=\"slots-row\">\r\n            {memberSlots}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return blocks;\r\n  };\r\n\r\n  return (\r\n    <div className=\"day-detail-overlay\" onClick={onClose}>\r\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"day-detail-header\">\r\n          <div>\r\n            <h2>{formatDate(date)}</h2>\r\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\r\n          </div>\r\n          <button className=\"close-button\" onClick={onClose}>✕</button>\r\n        </div>\r\n\r\n        <div className=\"availability-grid\" data-view={selectedMember === 'all' ? 'all' : 'single'}>\r\n          {/* Fixed header row with member names */}\r\n          <div className=\"member-headers\">\r\n            <div className=\"time-header\"></div>\r\n            {selectedMember === 'all' ? members.map(member => (\r\n              <div key={member.id} className=\"member-header\">\r\n                <div className=\"member-avatar\" style={{ \r\n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\r\n                }}>\r\n                  {member.name.charAt(0)}\r\n                </div>\r\n                <span className=\"member-name\">{member.name}</span>\r\n              </div>\r\n            )) : (\r\n              // Show only the selected member's header\r\n              <div className=\"member-header\">\r\n                <div className=\"member-avatar\" style={{ \r\n                  backgroundColor: `hsl(${members.find(m => m.id === parseInt(selectedMember))?.id * 60 || 0}, 70%, 60%)`\r\n                }}>\r\n                  {members.find(m => m.id === parseInt(selectedMember))?.name.charAt(0)}\r\n                </div>\r\n                <span className=\"member-name\">\r\n                  {members.find(m => m.id === parseInt(selectedMember))?.name}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Time blocks */}\r\n          <div className=\"time-blocks\">\r\n            {getTimeBlocks().map((block, index) => {\r\n              // If viewing individual member, modify the slots-row to only show that member\r\n              const modifiedBlock = React.cloneElement(block, {\r\n                children: [\r\n                  block.props.children[0], // Keep the time label\r\n                  <div key=\"slots\" className=\"slots-row\">\r\n                    {selectedMember === 'all' \r\n                      ? block.props.children[1].props.children // Show all members\r\n                      : block.props.children[1].props.children.find(slot => // Show only selected member\r\n                          slot.key === selectedMember.toString()\r\n                        )\r\n                    }\r\n                  </div>\r\n                ]\r\n              });\r\n              return modifiedBlock;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}