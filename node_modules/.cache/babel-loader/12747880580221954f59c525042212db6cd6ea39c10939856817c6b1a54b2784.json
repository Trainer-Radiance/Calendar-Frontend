{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid() {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    // Adjust to previous Sunday (week start for en-US)\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const groupEventsByDay = useCallback(events => {\n    const grouped = getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      acc[dateString] = [];\n      return acc;\n    }, {});\n    events.forEach(event => {\n      const date = new Date(event.start.dateTime);\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      if (grouped[dateString]) {\n        grouped[dateString].push(event);\n      }\n    });\n    return grouped;\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        const res = await fetch(`http://localhost:5000/api/availability?timezone=${encodeURIComponent(timezone)}` + `&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setEvents(groupEventsByDay(data));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user) fetchEvents();\n  }, [user, timezone, currentWeekStart, groupEventsByDay]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading calendar...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange('prev'),\n        children: \"\\u2190 Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentWeekStart.toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric',\n          timeZone: timezone\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange('next'),\n        children: \"Next Week \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), Object.entries(events).map(([date, dayEvents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-header\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), dayEvents.map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n        title: event.summary,\n        start: formatTime(event.start.dateTime),\n        end: formatTime(event.end.dateTime)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarGrid, \"5vKEEH8KYOvoKoqLp7uRb8D+GsA=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nvar _c;\n$RefreshReg$(_c, \"CalendarGrid\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","jsxDEV","_jsxDEV","CalendarGrid","_s","user","timezone","events","setEvents","loading","setLoading","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","groupEventsByDay","grouped","reduce","acc","dateString","toLocaleDateString","weekday","month","day","forEach","event","start","dateTime","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","res","fetch","encodeURIComponent","toISOString","credentials","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","year","Object","entries","map","dayEvents","title","summary","end","id","_c","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport EventItem from './EventItem';\r\n\r\nexport default function CalendarGrid() {\r\n  const { user, timezone } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\r\n    const date = new Date();\r\n    date.setHours(0, 0, 0, 0);\r\n    // Adjust to previous Sunday (week start for en-US)\r\n    date.setDate(date.getDate() - date.getDay());\r\n    return date;\r\n  });\r\n\r\n  const formatTime = useCallback(\r\n    (isoString) => {\r\n      return new Date(isoString).toLocaleTimeString('en-US', {\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: true,\r\n        timeZone: timezone,\r\n      });\r\n    },\r\n    [timezone]\r\n  );\r\n\r\n  const getWeekDays = useCallback(() => {\r\n    const days = [];\r\n    const date = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i++) {\r\n      const dayDate = new Date(date);\r\n      dayDate.setDate(date.getDate() + i);\r\n      days.push(dayDate);\r\n    }\r\n    return days;\r\n  }, [currentWeekStart]);\r\n\r\n  const groupEventsByDay = useCallback(\r\n    (events) => {\r\n      const grouped = getWeekDays().reduce((acc, date) => {\r\n        const dateString = date.toLocaleDateString('en-US', {\r\n          weekday: 'long',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          timeZone: timezone,\r\n        });\r\n        acc[dateString] = [];\r\n        return acc;\r\n      }, {});\r\n\r\n      events.forEach((event) => {\r\n        const date = new Date(event.start.dateTime);\r\n        const dateString = date.toLocaleDateString('en-US', {\r\n          weekday: 'long',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          timeZone: timezone,\r\n        });\r\n        if (grouped[dateString]) {\r\n          grouped[dateString].push(event);\r\n        }\r\n      });\r\n\r\n      return grouped;\r\n    },\r\n    [getWeekDays, timezone]\r\n  );\r\n\r\n  const handleWeekChange = (direction) => {\r\n    setCurrentWeekStart(prev => {\r\n      const newDate = new Date(prev);\r\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\r\n      return newDate;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const startOfWeek = new Date(currentWeekStart);\r\n        const endOfWeek = new Date(startOfWeek);\r\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n\r\n        const res = await fetch(\r\n          `http://localhost:5000/api/availability?timezone=${encodeURIComponent(timezone)}` +\r\n          `&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\r\n          { credentials: 'include' }\r\n        );\r\n        const data = await res.json();\r\n        setEvents(groupEventsByDay(data));\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user) fetchEvents();\r\n  }, [user, timezone, currentWeekStart, groupEventsByDay]);\r\n\r\n  if (loading) return <div>Loading calendar...</div>;\r\n  if (!user) return <div>Please login to view calendar</div>;\r\n\r\n  return (\r\n    <div className=\"calendar-grid\">\r\n      <div className=\"week-navigation\">\r\n        <button onClick={() => handleWeekChange('prev')}>← Previous Week</button>\r\n        <span>\r\n          {currentWeekStart.toLocaleDateString('en-US', {\r\n            month: 'long',\r\n            year: 'numeric',\r\n            timeZone: timezone,\r\n          })}\r\n        </span>\r\n        <button onClick={() => handleWeekChange('next')}>Next Week →</button>\r\n      </div>\r\n\r\n      {Object.entries(events).map(([date, dayEvents]) => (\r\n        <div key={date} className=\"day-column\">\r\n          <div className=\"day-header\">{date}</div>\r\n          {dayEvents.map((event) => (\r\n            <EventItem\r\n              key={event.id}\r\n              title={event.summary}\r\n              start={formatTime(event.start.dateTime)}\r\n              end={formatTime(event.end.dateTime)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}