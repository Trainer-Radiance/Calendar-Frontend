{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight, Calendar, List, Grid, Square } from 'react-feather';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [viewMode, setViewMode] = useState('week'); // 'day', 'week', 'month', 'year'\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n\n  // Get days for the week view\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  // Get days for the month view\n  const getMonthDays = useCallback(() => {\n    const days = [];\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n\n    // First day of the month\n    const firstDay = new Date(year, month, 1);\n    // Last day of the month\n    const lastDay = new Date(year, month + 1, 0);\n\n    // Get the first day to display (might be from previous month)\n    const firstDayToDisplay = new Date(firstDay);\n    firstDayToDisplay.setDate(firstDayToDisplay.getDate() - firstDayToDisplay.getDay());\n\n    // Generate 42 days (6 weeks) to ensure consistent month view\n    for (let i = 0; i < 42; i++) {\n      const day = new Date(firstDayToDisplay);\n      day.setDate(firstDayToDisplay.getDate() + i);\n      days.push(day);\n    }\n    return days;\n  }, [currentDate]);\n\n  // Get months for year view\n  const getYearMonths = useCallback(() => {\n    const months = [];\n    const year = currentDate.getFullYear();\n    for (let i = 0; i < 12; i++) {\n      const monthDate = new Date(year, i, 1);\n      months.push(monthDate);\n    }\n    return months;\n  }, [currentDate]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const getMonthYearString = useCallback(() => {\n    return currentDate.toLocaleDateString('en-US', {\n      month: 'long',\n      year: 'numeric',\n      timeZone: timezone\n    });\n  }, [currentDate, timezone]);\n  const getYearString = useCallback(() => {\n    return currentDate.getFullYear().toString();\n  }, [currentDate]);\n  const getDayString = useCallback(() => {\n    return currentDate.toLocaleDateString('en-US', {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n      timeZone: timezone\n    });\n  }, [currentDate, timezone]);\n  const getTitleByViewMode = useCallback(() => {\n    switch (viewMode) {\n      case 'day':\n        return getDayString();\n      case 'week':\n        return getWeekRangeString();\n      case 'month':\n        return getMonthYearString();\n      case 'year':\n        return getYearString();\n      default:\n        return getWeekRangeString();\n    }\n  }, [viewMode, getDayString, getWeekRangeString, getMonthYearString, getYearString]);\n\n  // Group events by day for the weekly view\n  const groupEventsByDay = useCallback(events => {\n    if (viewMode === 'week') {\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        const dayEvents = events.filter(event => {\n          const eventDate = new Date(event.start.dateTime);\n          return eventDate.toLocaleDateString('en-US', {\n            timeZone: timezone\n          }) === date.toLocaleDateString('en-US', {\n            timeZone: timezone\n          });\n        });\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    } else {\n      // For other views, group by date string\n      return events.reduce((acc, event) => {\n        const eventDate = new Date(event.start.dateTime);\n        const dateString = eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        });\n        if (!acc[dateString]) {\n          acc[dateString] = [];\n        }\n        acc[dateString].push(event);\n        return acc;\n      }, {});\n    }\n  }, [getWeekDays, timezone, viewMode]);\n  const handleDateNavigation = direction => {\n    switch (viewMode) {\n      case 'day':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      case 'week':\n        setCurrentWeekStart(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n          return newDate;\n        });\n        // Also update currentDate to match the week\n        setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n          return newDate;\n        });\n        break;\n      case 'month':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setMonth(newDate.getMonth() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      case 'year':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setFullYear(newDate.getFullYear() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Set current date based on viewMode changes\n  useEffect(() => {\n    if (viewMode === 'day') {\n      // No need to change currentDate for day view\n    } else if (viewMode === 'week') {\n      // If switching to week view, update the week start based on currentDate\n      const newWeekStart = new Date(currentDate);\n      newWeekStart.setHours(0, 0, 0, 0);\n      newWeekStart.setDate(newWeekStart.getDate() - newWeekStart.getDay());\n      setCurrentWeekStart(newWeekStart);\n    }\n    // For month and year views, currentDate is already correctly set\n  }, [viewMode, currentDate]);\n\n  // Handle view mode change\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n\n  // Check if a date is today\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n\n  // Check if a date is in the current month (for month view)\n  const isCurrentMonth = date => {\n    return date.getMonth() === currentDate.getMonth();\n  };\n\n  // Get events for a specific date\n  const getEventsForDate = date => {\n    const dateString = date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n    return events[dateString] || [];\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        let startDate, endDate;\n\n        // Set the date range based on the view mode\n        switch (viewMode) {\n          case 'day':\n            startDate = new Date(currentDate);\n            startDate.setHours(0, 0, 0, 0);\n            endDate = new Date(currentDate);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'week':\n            startDate = new Date(currentWeekStart);\n            endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'month':\n            startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n            endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'year':\n            startDate = new Date(currentDate.getFullYear(), 0, 1);\n            endDate = new Date(currentDate.getFullYear(), 11, 31);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          default:\n            startDate = new Date(currentWeekStart);\n            endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            endDate.setHours(23, 59, 59, 999);\n        }\n        console.log('Date Range:', {\n          start: startDate.toISOString(),\n          end: endDate.toISOString(),\n          timezone\n        });\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startDate.toISOString()}&end=${endDate.toISOString()}`, {\n            credentials: 'include'\n          }).then(res => res.json()));\n          const results = await Promise.all(promises);\n          console.log('API Response for all members:', results);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName;\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startDate.toISOString()}&end=${endDate.toISOString()}`, {\n            credentials: 'include'\n          });\n          const data = await res.json();\n          console.log('API Response for single member:', data);\n          allEvents = data;\n        }\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped Events:', groupedEvents);\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, currentDate, viewMode, groupEventsByDay, members]);\n\n  // Render functions for different views\n  const renderDayView = () => {\n    // Display a single day's events in a timeline format\n    const dayEvents = getEventsForDate(currentDate);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-view\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-timeline\",\n        children: Array.from({\n          length: 24\n        }).map((_, hour) => {\n          const hourEvents = dayEvents.filter(event => {\n            const eventStart = new Date(event.start.dateTime);\n            return eventStart.getHours() === hour;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-slot\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-label\",\n              children: hour === 0 ? '12 AM' : hour < 12 ? `${hour} AM` : hour === 12 ? '12 PM' : `${hour - 12} PM`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-events\",\n              children: hourEvents.length > 0 ? hourEvents.map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n                title: event.summary,\n                start: formatTime(event.start.dateTime),\n                end: formatTime(event.end.dateTime),\n                memberName: selectedMember === 'all' ? event.memberName : null\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-events-hour\",\n                children: \"No events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWeekView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid week-view\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-column ${isToday(date) ? 'current-day' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => {\n              setSelectedDate(date);\n              setCurrentDate(date);\n            },\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMonthView = () => {\n    const monthDays = getMonthDays();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid month-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekday-headers\",\n        children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weekday-header\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-days\",\n        children: monthDays.map((date, index) => {\n          const dateKey = date.toISOString();\n          const dateString = date.toLocaleDateString('en-US', {\n            timeZone: timezone\n          });\n          const dayEvents = events[dateString] || [];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `month-day ${!isCurrentMonth(date) ? 'other-month' : ''} ${isToday(date) ? 'today' : ''}`,\n            onClick: () => {\n              setSelectedDate(date);\n              setCurrentDate(date);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"month-day-header\",\n              children: date.getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"month-day-events\",\n              children: dayEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-count\",\n                children: dayEvents.length > 3 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"more-events\",\n                    children: [\"+\", dayEvents.length - 3]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true) : Array(dayEvents.length).fill().map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-dot\"\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)]\n          }, dateKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this);\n  };\n  const renderYearView = () => {\n    const months = getYearMonths();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid year-view\",\n      children: months.map(month => {\n        const monthName = month.toLocaleDateString('en-US', {\n          month: 'short',\n          timeZone: timezone\n        });\n        // Calculate events for this month\n        const firstDay = new Date(month.getFullYear(), month.getMonth(), 1);\n        const lastDay = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n        let eventCount = 0;\n        // Count events in this month\n        for (const dateStr in events) {\n          const eventDate = new Date(dateStr);\n          if (eventDate >= firstDay && eventDate <= lastDay) {\n            eventCount += events[dateStr].length;\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `year-month ${month.getMonth() === new Date().getMonth() && month.getFullYear() === new Date().getFullYear() ? 'current-month' : ''}`,\n          onClick: () => {\n            setCurrentDate(month);\n            setViewMode('month');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-name\",\n            children: monthName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini-month-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mini-month-events\",\n              children: eventCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-indicator\",\n                children: [eventCount, \" events\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, monthName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this);\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-button\",\n          onClick: () => handleDateNavigation('prev'),\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"calendar-title\",\n          children: getTitleByViewMode()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-button\",\n          onClick: () => handleDateNavigation('next'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-btn ${viewMode === 'day' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('day'),\n          title: \"Day View\",\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-btn ${viewMode === 'week' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('week'),\n          title: \"Week View\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-btn ${viewMode === 'month' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('month'),\n          title: \"Month View\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-btn ${viewMode === 'year' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('year'),\n          title: \"Year View\",\n          children: [/*#__PURE__*/_jsxDEV(Square, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mobile-hidden\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-view-container\",\n      children: [viewMode === 'day' && renderDayView(), viewMode === 'week' && renderWeekView(), viewMode === 'month' && renderMonthView(), viewMode === 'year' && renderYearView()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"iXuYSmgDSGPEL2zGOCnbKkpueGI=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  var _members$find, _members$find2, _members$find3;\n  const [members, setMembers] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // Process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n\n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = dateStr => {\n      const date = new Date(dateStr);\n      return date.getHours() * 60 + date.getMinutes();\n    };\n\n    // Calculate current time indicator position\n    const getCurrentTimePosition = () => {\n      const now = new Date();\n      const selectedDateStr = date.toLocaleDateString('en-US', {\n        timeZone: timezone\n      });\n      const currentDateStr = now.toLocaleDateString('en-US', {\n        timeZone: timezone\n      });\n      if (selectedDateStr === currentDateStr) {\n        const minutes = getMinutesSinceMidnight(now);\n        return `${minutes / 1440 * 100}%`;\n      }\n      return null;\n    };\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n    const formatHourLabel = hour => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n\n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n\n          // Check if event overlaps with this hour\n          const eventOverlapsHour = event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes || event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes;\n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          return false;\n        });\n        const isBusy = hourEvents.length > 0;\n        const getEventType = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n        const getEventStyles = event => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(event.durationMinutes, 60 - startMinutes // Cap at remaining minutes in the hour\n          );\n\n          // Calculate percentage-based positioning\n          const topPercentage = startMinutes / 60 * 100;\n          const heightPercentage = durationInMinutes / 60 * 100;\n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: hourEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-details ${getEventType(event)}`,\n            style: getEventStyles(event),\n            \"data-start-time\": event.startMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this), formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)]\n          }, `${event.id}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: [memberSlots, getCurrentTimePosition() && hour === Math.floor(getMinutesSinceMidnight(currentTime) / 60) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-indicator\",\n            style: {\n              top: `${getMinutesSinceMidnight(currentTime) % 60 / 60 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        \"data-view\": selectedMember === 'all' ? 'all' : 'single',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this), selectedMember === 'all' ? members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${((_members$find = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find === void 0 ? void 0 : _members$find.id) * 60 || 0}, 70%, 60%)`\n              },\n              children: (_members$find2 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find2 === void 0 ? void 0 : _members$find2.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: (_members$find3 = members.find(m => m.id === parseInt(selectedMember))) === null || _members$find3 === void 0 ? void 0 : _members$find3.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-view-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Switch to Desktop View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"For a better experience viewing multiple team members' schedules, please use a desktop or tablet device.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 885,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"O3pRlvVpowgy7xB8QPY3aWQYp6c=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","Calendar","List","Grid","Square","React","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","viewMode","setViewMode","currentDate","setCurrentDate","Date","currentWeekStart","setCurrentWeekStart","date","setHours","setDate","getDate","getDay","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getMonthDays","year","getFullYear","month","getMonth","firstDay","lastDay","firstDayToDisplay","day","getYearMonths","months","monthDate","getWeekRangeString","start","end","toLocaleDateString","getMonthYearString","getYearString","toString","getDayString","weekday","getTitleByViewMode","groupEventsByDay","reduce","acc","dateString","dayEvents","filter","event","eventDate","dateTime","handleDateNavigation","direction","prevDate","newDate","prev","setMonth","setFullYear","newWeekStart","handleViewModeChange","mode","isToday","today","isCurrentMonth","getEventsForDate","fetchEvents","startDate","endDate","log","toISOString","allEvents","promises","map","member","id","encodeURIComponent","then","results","Promise","all","forEach","memberEvents","index","memberName","name","groupedEvents","renderDayView","className","children","Array","from","length","_","hourEvents","eventStart","getHours","fileName","_jsxFileName","lineNumber","columnNumber","title","summary","renderWeekView","_events$dateString","onClick","style","cursor","renderMonthView","monthDays","dateKey","fill","renderYearView","monthName","eventCount","dateStr","size","DayDetailView","Object","values","flat","onClose","_c","_s2","_members$find","_members$find2","_members$find3","currentTime","setCurrentTime","timer","setInterval","clearInterval","formatDate","time","replace","dateEvents","getTimeBlocks","blocks","processedEvents","relevantMembers","m","parseInt","getMinutesSinceMidnight","getMinutes","getCurrentTimePosition","now","selectedDateStr","currentDateStr","minutes","Map","sort","a","b","eventKey","startMinutes","endMinutes","set","displayed","durationMinutes","formatHourLabel","timeDate","timeLabel","hourStartMinutes","hourEndMinutes","memberSlots","memberEventsList","eventOverlapsHour","isBusy","getEventType","titleLower","toLowerCase","includes","getEventStyles","durationInMinutes","Math","min","topPercentage","heightPercentage","position","top","height","left","right","zIndex","floor","e","stopPropagation","backgroundColor","charAt","find","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight, Calendar, List, Grid, Square } from 'react-feather';\nimport React from 'react';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [viewMode, setViewMode] = useState('week'); // 'day', 'week', 'month', 'year'\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  // Get days for the week view\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  // Get days for the month view\n  const getMonthDays = useCallback(() => {\n    const days = [];\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    \n    // First day of the month\n    const firstDay = new Date(year, month, 1);\n    // Last day of the month\n    const lastDay = new Date(year, month + 1, 0);\n    \n    // Get the first day to display (might be from previous month)\n    const firstDayToDisplay = new Date(firstDay);\n    firstDayToDisplay.setDate(firstDayToDisplay.getDate() - firstDayToDisplay.getDay());\n    \n    // Generate 42 days (6 weeks) to ensure consistent month view\n    for (let i = 0; i < 42; i++) {\n      const day = new Date(firstDayToDisplay);\n      day.setDate(firstDayToDisplay.getDate() + i);\n      days.push(day);\n    }\n    \n    return days;\n  }, [currentDate]);\n\n  // Get months for year view\n  const getYearMonths = useCallback(() => {\n    const months = [];\n    const year = currentDate.getFullYear();\n    \n    for (let i = 0; i < 12; i++) {\n      const monthDate = new Date(year, i, 1);\n      months.push(monthDate);\n    }\n    \n    return months;\n  }, [currentDate]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const getMonthYearString = useCallback(() => {\n    return currentDate.toLocaleDateString('en-US', {\n      month: 'long',\n      year: 'numeric',\n      timeZone: timezone,\n    });\n  }, [currentDate, timezone]);\n\n  const getYearString = useCallback(() => {\n    return currentDate.getFullYear().toString();\n  }, [currentDate]);\n\n  const getDayString = useCallback(() => {\n    return currentDate.toLocaleDateString('en-US', {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n      timeZone: timezone,\n    });\n  }, [currentDate, timezone]);\n\n  const getTitleByViewMode = useCallback(() => {\n    switch (viewMode) {\n      case 'day':\n        return getDayString();\n      case 'week':\n        return getWeekRangeString();\n      case 'month':\n        return getMonthYearString();\n      case 'year':\n        return getYearString();\n      default:\n        return getWeekRangeString();\n    }\n  }, [viewMode, getDayString, getWeekRangeString, getMonthYearString, getYearString]);\n\n  // Group events by day for the weekly view\n  const groupEventsByDay = useCallback(\n    (events) => {\n      if (viewMode === 'week') {\n        return getWeekDays().reduce((acc, date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          const dayEvents = events.filter((event) => {\n            const eventDate = new Date(event.start.dateTime);\n            return (\n              eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n              date.toLocaleDateString('en-US', { timeZone: timezone })\n            );\n          });\n\n          acc[dateString] = dayEvents;\n          return acc;\n        }, {});\n      } else {\n        // For other views, group by date string\n        return events.reduce((acc, event) => {\n          const eventDate = new Date(event.start.dateTime);\n          const dateString = eventDate.toLocaleDateString('en-US', {\n            timeZone: timezone\n          });\n          \n          if (!acc[dateString]) {\n            acc[dateString] = [];\n          }\n          \n          acc[dateString].push(event);\n          return acc;\n        }, {});\n      }\n    },\n    [getWeekDays, timezone, viewMode]\n  );\n\n  const handleDateNavigation = (direction) => {\n    switch (viewMode) {\n      case 'day':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      case 'week':\n        setCurrentWeekStart(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n          return newDate;\n        });\n        // Also update currentDate to match the week\n        setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n          return newDate;\n        });\n        break;\n      case 'month':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setMonth(newDate.getMonth() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      case 'year':\n        setCurrentDate(prevDate => {\n          const newDate = new Date(prevDate);\n          newDate.setFullYear(newDate.getFullYear() + (direction === 'next' ? 1 : -1));\n          return newDate;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Set current date based on viewMode changes\n  useEffect(() => {\n    if (viewMode === 'day') {\n      // No need to change currentDate for day view\n    } else if (viewMode === 'week') {\n      // If switching to week view, update the week start based on currentDate\n      const newWeekStart = new Date(currentDate);\n      newWeekStart.setHours(0, 0, 0, 0);\n      newWeekStart.setDate(newWeekStart.getDate() - newWeekStart.getDay());\n      setCurrentWeekStart(newWeekStart);\n    }\n    // For month and year views, currentDate is already correctly set\n  }, [viewMode, currentDate]);\n\n  // Handle view mode change\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n  };\n\n  // Check if a date is today\n  const isToday = (date) => {\n    const today = new Date();\n    return date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n  };\n\n  // Check if a date is in the current month (for month view)\n  const isCurrentMonth = (date) => {\n    return date.getMonth() === currentDate.getMonth();\n  };\n\n  // Get events for a specific date\n  const getEventsForDate = (date) => {\n    const dateString = date.toLocaleDateString('en-US', { timeZone: timezone });\n    return events[dateString] || [];\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        let startDate, endDate;\n        \n        // Set the date range based on the view mode\n        switch (viewMode) {\n          case 'day':\n            startDate = new Date(currentDate);\n            startDate.setHours(0, 0, 0, 0);\n            endDate = new Date(currentDate);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'week':\n            startDate = new Date(currentWeekStart);\n            endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'month':\n            startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n            endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          case 'year':\n            startDate = new Date(currentDate.getFullYear(), 0, 1);\n            endDate = new Date(currentDate.getFullYear(), 11, 31);\n            endDate.setHours(23, 59, 59, 999);\n            break;\n          default:\n            startDate = new Date(currentWeekStart);\n            endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            endDate.setHours(23, 59, 59, 999);\n        }\n\n        console.log('Date Range:', {\n          start: startDate.toISOString(),\n          end: endDate.toISOString(),\n          timezone\n        });\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member =>\n            fetch(\n              `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                timezone\n              )}&start=${startDate.toISOString()}&end=${endDate.toISOString()}`,\n              { credentials: 'include' }\n            ).then(res => res.json())\n          );\n\n          const results = await Promise.all(promises);\n          console.log('API Response for all members:', results);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName;\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startDate.toISOString()}&end=${endDate.toISOString()}`,\n            { credentials: 'include' }\n          );\n          const data = await res.json();\n          console.log('API Response for single member:', data);\n          allEvents = data;\n        }\n\n        const groupedEvents = groupEventsByDay(allEvents);\n        console.log('Grouped Events:', groupedEvents);\n        setEvents(groupedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, currentDate, viewMode, groupEventsByDay, members]);\n\n  // Render functions for different views\n  const renderDayView = () => {\n    // Display a single day's events in a timeline format\n    const dayEvents = getEventsForDate(currentDate);\n    \n    return (\n      <div className=\"day-view\">\n        <div className=\"day-timeline\">\n          {Array.from({ length: 24 }).map((_, hour) => {\n            const hourEvents = dayEvents.filter(event => {\n              const eventStart = new Date(event.start.dateTime);\n              return eventStart.getHours() === hour;\n            });\n            \n            return (\n              <div key={hour} className=\"hour-slot\">\n                <div className=\"hour-label\">\n                  {hour === 0 ? '12 AM' : hour < 12 ? `${hour} AM` : hour === 12 ? '12 PM' : `${hour - 12} PM`}\n                </div>\n                <div className=\"hour-events\">\n                  {hourEvents.length > 0 ? (\n                    hourEvents.map(event => (\n                      <EventItem\n                        key={event.id}\n                        title={event.summary}\n                        start={formatTime(event.start.dateTime)}\n                        end={formatTime(event.end.dateTime)}\n                        memberName={selectedMember === 'all' ? event.memberName : null}\n                      />\n                    ))\n                  ) : (\n                    <div className=\"no-events-hour\">No events</div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const renderWeekView = () => {\n    return (\n      <div className=\"calendar-grid week-view\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className={`day-column ${isToday(date) ? 'current-day' : ''}`}>\n              <div \n                className=\"day-header\"\n                onClick={() => {\n                  setSelectedDate(date);\n                  setCurrentDate(date);\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderMonthView = () => {\n    const monthDays = getMonthDays();\n    \n    return (\n      <div className=\"calendar-grid month-view\">\n        <div className=\"weekday-headers\">\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n            <div key={day} className=\"weekday-header\">{day}</div>\n          ))}\n        </div>\n        <div className=\"month-days\">\n          {monthDays.map((date, index) => {\n            const dateKey = date.toISOString();\n            const dateString = date.toLocaleDateString('en-US', { timeZone: timezone });\n            const dayEvents = events[dateString] || [];\n            \n            return (\n              <div \n                key={dateKey} \n                className={`month-day ${!isCurrentMonth(date) ? 'other-month' : ''} ${isToday(date) ? 'today' : ''}`}\n                onClick={() => {\n                  setSelectedDate(date);\n                  setCurrentDate(date);\n                }}\n              >\n                <div className=\"month-day-header\">\n                  {date.getDate()}\n                </div>\n                <div className=\"month-day-events\">\n                  {dayEvents.length > 0 && (\n                    <div className=\"event-count\">\n                      {dayEvents.length > 3 \n                        ? <>\n                            <div className=\"event-dot\"></div>\n                            <div className=\"event-dot\"></div>\n                            <div className=\"event-dot\"></div>\n                            <span className=\"more-events\">+{dayEvents.length - 3}</span>\n                          </>\n                        : Array(dayEvents.length).fill().map((_, i) => (\n                            <div key={i} className=\"event-dot\"></div>\n                          ))\n                      }\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const renderYearView = () => {\n    const months = getYearMonths();\n    \n    return (\n      <div className=\"calendar-grid year-view\">\n        {months.map(month => {\n          const monthName = month.toLocaleDateString('en-US', { month: 'short', timeZone: timezone });\n          // Calculate events for this month\n          const firstDay = new Date(month.getFullYear(), month.getMonth(), 1);\n          const lastDay = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n          \n          let eventCount = 0;\n          // Count events in this month\n          for (const dateStr in events) {\n            const eventDate = new Date(dateStr);\n            if (eventDate >= firstDay && eventDate <= lastDay) {\n              eventCount += events[dateStr].length;\n            }\n          }\n          \n          return (\n            <div \n              key={monthName} \n              className={`year-month ${month.getMonth() === new Date().getMonth() && \n                month.getFullYear() === new Date().getFullYear() ? 'current-month' : ''}`}\n              onClick={() => {\n                setCurrentDate(month);\n                setViewMode('month');\n              }}\n            >\n              <div className=\"month-name\">{monthName}</div>\n              <div className=\"mini-month-grid\">\n                {/* Show a miniature representation of the month */}\n                <div className=\"mini-month-events\">\n                  {eventCount > 0 && <div className=\"event-indicator\">{eventCount} events</div>}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <div className=\"calendar-navigation\">\n          <button className=\"nav-button\" onClick={() => handleDateNavigation('prev')}>\n            <ChevronLeft size={24} />\n            <span className=\"mobile-hidden\">Previous</span>\n          </button>\n\n          <h2 className=\"calendar-title\">{getTitleByViewMode()}</h2>\n\n          <button className=\"nav-button\" onClick={() => handleDateNavigation('next')}>\n            <span className=\"mobile-hidden\">Next</span>\n            <ChevronRight size={24} />\n          </button>\n        </div>\n        \n        <div className=\"view-mode-selector\">\n          <button \n            className={`view-mode-btn ${viewMode === 'day' ? 'active' : ''}`} \n            onClick={() => handleViewModeChange('day')}\n            title=\"Day View\"\n          >\n            <List size={18} />\n            <span className=\"mobile-hidden\">Day</span>\n          </button>\n          <button \n            className={`view-mode-btn ${viewMode === 'week' ? 'active' : ''}`} \n            onClick={() => handleViewModeChange('week')}\n            title=\"Week View\"\n          >\n            <Calendar size={18} />\n            <span className=\"mobile-hidden\">Week</span>\n          </button>\n          <button \n            className={`view-mode-btn ${viewMode === 'month' ? 'active' : ''}`} \n            onClick={() => handleViewModeChange('month')}\n            title=\"Month View\"\n          >\n            <Grid size={18} />\n            <span className=\"mobile-hidden\">Month</span>\n          </button>\n          <button \n            className={`view-mode-btn ${viewMode === 'year' ? 'active' : ''}`}\n            onClick={() => handleViewModeChange('year')}\n            title=\"Year View\"\n          >\n            <Square size={18} />\n            <span className=\"mobile-hidden\">Year</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"calendar-view-container\">\n        {viewMode === 'day' && renderDayView()}\n        {viewMode === 'week' && renderWeekView()}\n        {viewMode === 'month' && renderMonthView()}\n        {viewMode === 'year' && renderYearView()}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n    \n    // Process the events and track their display status\n    const processedEvents = {};\n    const relevantMembers = selectedMember === 'all' ? members : members.filter(m => m.id === parseInt(selectedMember));\n    \n    // Function to calculate minutes since midnight\n    const getMinutesSinceMidnight = (dateStr) => {\n      const date = new Date(dateStr);\n      return (date.getHours() * 60) + date.getMinutes();\n    };\n\n    // Calculate current time indicator position\n    const getCurrentTimePosition = () => {\n      const now = new Date();\n      const selectedDateStr = date.toLocaleDateString('en-US', { timeZone: timezone });\n      const currentDateStr = now.toLocaleDateString('en-US', { timeZone: timezone });\n      \n      if (selectedDateStr === currentDateStr) {\n        const minutes = getMinutesSinceMidnight(now);\n        return `${(minutes / 1440) * 100}%`;\n      }\n      return null;\n    };\n\n    relevantMembers.forEach(member => {\n      processedEvents[member.id] = new Map();\n      \n      const memberEvents = dateEvents.filter(event => {\n        if (selectedMember === 'all') {\n          return event.memberName === member.name;\n        } else {\n          return true;\n        }\n      });\n\n      memberEvents.sort((a, b) => new Date(a.start.dateTime) - new Date(b.start.dateTime));\n      \n      memberEvents.forEach(event => {\n        const eventKey = `${event.id}-${event.start.dateTime}`;\n        const startMinutes = getMinutesSinceMidnight(event.start.dateTime);\n        const endMinutes = getMinutesSinceMidnight(event.end.dateTime);\n        \n        processedEvents[member.id].set(eventKey, {\n          ...event,\n          displayed: false,\n          startMinutes,\n          endMinutes,\n          durationMinutes: endMinutes - startMinutes\n        });\n      });\n    });\n\n    const formatHourLabel = (hour) => {\n      const timeDate = new Date(date);\n      timeDate.setHours(hour, 0, 0, 0);\n      return timeDate.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        hour12: true,\n        timeZone: timezone\n      }).replace(/\\s/g, ''); // Remove extra spaces for consistent display\n    };\n\n    // Generate blocks for each hour\n    for (let hour = 0; hour < 24; hour++) {\n      const timeLabel = formatHourLabel(hour);\n      const hourStartMinutes = hour * 60;\n      const hourEndMinutes = (hour + 1) * 60;\n      \n      const memberSlots = relevantMembers.map(member => {\n        const memberEventsList = Array.from(processedEvents[member.id].values());\n        \n        // Get all events that overlap with this hour\n        const hourEvents = memberEventsList.filter(event => {\n          if (event.displayed) return false;\n          \n          // Check if event overlaps with this hour\n          const eventOverlapsHour = (\n            (event.startMinutes < hourEndMinutes && event.endMinutes > hourStartMinutes) ||\n            (event.startMinutes >= hourStartMinutes && event.startMinutes < hourEndMinutes)\n          );\n          \n          if (eventOverlapsHour) {\n            event.displayed = true;\n            return true;\n          }\n          \n          return false;\n        });\n\n        const isBusy = hourEvents.length > 0;\n        \n        const getEventType = (event) => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return 'meeting';\n          if (titleLower.includes('assessment')) return 'assessment';\n          if (titleLower.includes('half day')) return 'half-day';\n          if (titleLower.includes('training')) return 'training';\n          return 'default';\n        };\n\n        const getEventStyles = (event) => {\n          // Calculate position based on minutes since start of day\n          const startMinutes = event.startMinutes % 60;\n          const durationInMinutes = Math.min(\n            event.durationMinutes,\n            60 - startMinutes // Cap at remaining minutes in the hour\n          );\n          \n          // Calculate percentage-based positioning\n          const topPercentage = (startMinutes / 60) * 100;\n          const heightPercentage = (durationInMinutes / 60) * 100;\n          \n          return {\n            position: 'absolute',\n            top: `${topPercentage}%`,\n            height: `${heightPercentage}%`,\n            left: '0',\n            right: '0',\n            zIndex: event.startMinutes\n          };\n        };\n        \n        return (\n          <div \n            key={member.id} \n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {hourEvents.map((event) => (\n              <div \n                key={`${event.id}-${hour}`}\n                className={`event-details ${getEventType(event)}`}\n                style={getEventStyles(event)}\n                data-start-time={event.startMinutes}\n              >\n                <div className=\"event-title\">\n                  {event.summary}\n                </div>\n                <div className=\"event-time\">\n                  <span className=\"time-icon\">⏱️</span>\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n      \n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n            {getCurrentTimePosition() && hour === Math.floor(getMinutesSinceMidnight(currentTime) / 60) && (\n              <div \n                className=\"current-time-indicator\" \n                style={{ \n                  top: `${((getMinutesSinceMidnight(currentTime) % 60) / 60) * 100}%` \n                }}\n              />\n            )}\n          </div>\n        </div>\n      );\n    }\n    \n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\" data-view={selectedMember === 'all' ? 'all' : 'single'}>\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {selectedMember === 'all' ? members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            )) : (\n              <div className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${members.find(m => m.id === parseInt(selectedMember))?.id * 60 || 0}, 70%, 60%)`\n                }}>\n                  {members.find(m => m.id === parseInt(selectedMember))?.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">\n                  {members.find(m => m.id === parseInt(selectedMember))?.name}\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"time-blocks\">\n            {getTimeBlocks()}\n          </div>\n        </div>\n\n        <div className=\"mobile-view-message\">\n          <h3>Switch to Desktop View</h3>\n          <p>For a better experience viewing multiple team members' schedules, please use a desktop or tablet device.</p>\n          <button className=\"action-button\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}