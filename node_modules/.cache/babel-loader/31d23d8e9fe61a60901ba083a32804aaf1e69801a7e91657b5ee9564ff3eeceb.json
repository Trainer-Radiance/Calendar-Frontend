{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\components\\\\CalendarGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarGrid({\n  selectedMember,\n  setSelectedMember\n}) {\n  _s();\n  const {\n    user,\n    timezone\n  } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    if (user) fetchMembers();\n  }, [user]);\n  const formatTime = useCallback(isoString => {\n    return new Date(isoString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  }, [timezone]);\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone\n    })}`;\n  }, [currentWeekStart, timezone]);\n  const groupEventsByDay = useCallback(events => {\n    return getWeekDays().reduce((acc, date) => {\n      const dateString = date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'short',\n        day: 'numeric',\n        timeZone: timezone\n      });\n      const dayEvents = events.filter(event => {\n        const eventDate = new Date(event.start.dateTime);\n        return eventDate.toLocaleDateString('en-US', {\n          timeZone: timezone\n        }) === date.toLocaleDateString('en-US', {\n          timeZone: timezone\n        });\n      });\n      acc[dateString] = dayEvents;\n      return acc;\n    }, {});\n  }, [getWeekDays, timezone]);\n  const handleWeekChange = direction => {\n    setCurrentWeekStart(prev => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        let allEvents = [];\n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member => fetch(`http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          }).then(res => res.json()));\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(`http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(timezone)}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`, {\n            credentials: 'include'\n          });\n          allEvents = await res.json();\n        }\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-warning\",\n    children: \"Please login to view calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 21\n  }, this);\n  if (!selectedMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-warning\",\n      children: \"Please select a member to view their calendar availability.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('prev'),\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"week-range\",\n        children: getWeekRangeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => handleWeekChange('next'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mobile-hidden\",\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: getWeekDays().map(date => {\n        var _events$dateString;\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            onClick: () => setSelectedDate(date),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday\",\n              children: date.toLocaleDateString('en-US', {\n                weekday: 'short',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                timeZone: timezone\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [(events[dateString] || []).map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n              title: event.summary,\n              start: formatTime(event.start.dateTime),\n              end: formatTime(event.end.dateTime),\n              memberName: selectedMember === 'all' ? event.memberName : null\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)), ((_events$dateString = events[dateString]) === null || _events$dateString === void 0 ? void 0 : _events$dateString.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-events\",\n              children: \"No events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, dateString, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(DayDetailView, {\n      date: selectedDate,\n      events: Object.values(events).flat(),\n      onClose: () => setSelectedDate(null),\n      timezone: timezone,\n      selectedMember: selectedMember\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n\n// DayDetailView Component\n_s(CalendarGrid, \"mLpKF5cXHgu0fkDZsNO3fzzBCQ8=\", false, function () {\n  return [useAuth];\n});\n_c = CalendarGrid;\nconst DayDetailView = ({\n  date,\n  events,\n  onClose,\n  timezone,\n  selectedMember\n}) => {\n  _s2();\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n  const formatTime = time => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', {\n      timeZone: timezone\n    }) === date.toLocaleDateString('en-US', {\n      timeZone: timezone\n    });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n\n    // Generate a block for each hour (24 hours)\n    for (let hour = 0; hour < 24; hour++) {\n      const hourFormatted = hour.toString().padStart(2, '0');\n      const timeLabel = `${hour === 0 ? '12' : hour > 12 ? hour - 12 : hour}:00 ${hour >= 12 ? 'PM' : 'AM'}`;\n      const memberSlots = members.map(member => {\n        // Get events for this member in this hour\n        const memberEvents = dateEvents.filter(event => {\n          // For team view, match by member name; for individual view match by calendar ID\n          const isForMember = selectedMember === 'all' ? event.memberName === member.name : event.calendarId === member.calendarId;\n          if (!isForMember) return false;\n\n          // Now check if the event overlaps with this hour\n          const eventStartHour = new Date(event.start.dateTime).getHours();\n          const eventEndHour = new Date(event.end.dateTime).getHours();\n          const eventEndMinutes = new Date(event.end.dateTime).getMinutes();\n\n          // If end time is exactly 00:00, we need to consider it as the end of the previous hour\n          const adjustedEndHour = eventEndMinutes === 0 && eventEndHour === 0 ? 24 : eventEndHour;\n\n          // Check if this hour falls within the event's time range\n          return hour >= eventStartHour && hour < adjustedEndHour;\n        });\n        const isBusy = memberEvents.length > 0;\n\n        // Get the color based on the event type\n        const getEventColor = event => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return '#4f46e5'; // Indigo\n          if (titleLower.includes('assessment')) return '#ec4899'; // Pink\n          if (titleLower.includes('proxy')) return '#f97316'; // Orange\n          if (titleLower.includes('resume') || titleLower.includes('interview')) return '#14b8a6'; // Teal\n          return '#4f46e5'; // Default - Indigo\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${isBusy ? 'busy' : 'available'}`,\n          children: memberEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-details\",\n            style: {\n              borderLeftColor: getEventColor(event)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-title\",\n              children: event.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), formatTime(event.start.dateTime), \" - \", formatTime(event.end.dateTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this))\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this);\n      });\n      blocks.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: timeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-row\",\n          children: memberSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this));\n    }\n    return blocks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-detail-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-detail-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timezone-display\",\n            children: [\"Timezone: \", timezone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-avatar\",\n              style: {\n                backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n              },\n              children: member.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-blocks\",\n          children: getTimeBlocks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s2(DayDetailView, \"vkicIfJtsxnOItErHE0sT+V21Y0=\");\n_c2 = DayDetailView;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarGrid\");\n$RefreshReg$(_c2, \"DayDetailView\");","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","EventItem","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","CalendarGrid","selectedMember","setSelectedMember","_s","user","timezone","events","setEvents","loading","setLoading","members","setMembers","selectedDate","setSelectedDate","currentWeekStart","setCurrentWeekStart","date","Date","setHours","setDate","getDate","getDay","fetchMembers","res","fetch","credentials","data","json","error","console","formatTime","isoString","toLocaleTimeString","hour","minute","hour12","timeZone","getWeekDays","days","i","dayDate","push","getWeekRangeString","start","end","toLocaleDateString","month","day","year","groupEventsByDay","reduce","acc","dateString","weekday","dayEvents","filter","event","eventDate","dateTime","handleWeekChange","direction","prev","newDate","fetchEvents","startOfWeek","endOfWeek","allEvents","promises","map","member","id","encodeURIComponent","toISOString","then","results","Promise","all","forEach","memberEvents","index","memberName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_events$dateString","style","cursor","title","summary","length","DayDetailView","Object","values","flat","onClose","_c","_s2","formatDate","time","dateEvents","getTimeBlocks","blocks","hourFormatted","toString","padStart","timeLabel","memberSlots","isForMember","calendarId","eventStartHour","getHours","eventEndHour","eventEndMinutes","getMinutes","adjustedEndHour","isBusy","getEventColor","titleLower","toLowerCase","includes","borderLeftColor","e","stopPropagation","backgroundColor","charAt","_c2","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/components/CalendarGrid.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport EventItem from './EventItem';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\n\nexport default function CalendarGrid({ selectedMember, setSelectedMember }) {\n  const { user, timezone } = useAuth();\n  const [events, setEvents] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [members, setMembers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay());\n    return date;\n  });\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n\n    if (user) fetchMembers();\n  }, [user]);\n\n  const formatTime = useCallback(\n    (isoString) => {\n      return new Date(isoString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: timezone,\n      });\n    },\n    [timezone]\n  );\n\n  const getWeekDays = useCallback(() => {\n    const days = [];\n    const date = new Date(currentWeekStart);\n    for (let i = 0; i < 7; i++) {\n      const dayDate = new Date(date);\n      dayDate.setDate(date.getDate() + i);\n      days.push(dayDate);\n    }\n    return days;\n  }, [currentWeekStart]);\n\n  const getWeekRangeString = useCallback(() => {\n    const start = new Date(currentWeekStart);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n\n    return `${start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      timeZone: timezone,\n    })} - ${end.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      timeZone: timezone,\n    })}`;\n  }, [currentWeekStart, timezone]);\n\n  const groupEventsByDay = useCallback(\n    (events) => {\n      return getWeekDays().reduce((acc, date) => {\n        const dateString = date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          month: 'short',\n          day: 'numeric',\n          timeZone: timezone,\n        });\n\n        const dayEvents = events.filter((event) => {\n          const eventDate = new Date(event.start.dateTime);\n          return (\n            eventDate.toLocaleDateString('en-US', { timeZone: timezone }) ===\n            date.toLocaleDateString('en-US', { timeZone: timezone })\n          );\n        });\n\n        acc[dateString] = dayEvents;\n        return acc;\n      }, {});\n    },\n    [getWeekDays, timezone]\n  );\n\n  const handleWeekChange = (direction) => {\n    setCurrentWeekStart((prev) => {\n      const newDate = new Date(prev);\n      newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7));\n      return newDate;\n    });\n  };\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        setLoading(true);\n        const startOfWeek = new Date(currentWeekStart);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n\n        let allEvents = [];\n        \n        if (selectedMember === 'all') {\n          // Fetch events for all members\n          const promises = members.map(member =>\n            fetch(\n              `http://localhost:5000/api/availability/${member.id}?timezone=${encodeURIComponent(\n                timezone\n              )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n              { credentials: 'include' }\n            ).then(res => res.json())\n          );\n\n          const results = await Promise.all(promises);\n          results.forEach((memberEvents, index) => {\n            const memberName = members[index].name;\n            memberEvents.forEach(event => {\n              event.memberName = memberName; // Add member name to each event\n            });\n            allEvents = [...allEvents, ...memberEvents];\n          });\n        } else {\n          // Fetch events for single member\n          const res = await fetch(\n            `http://localhost:5000/api/availability/${selectedMember}?timezone=${encodeURIComponent(\n              timezone\n            )}&start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,\n            { credentials: 'include' }\n          );\n          allEvents = await res.json();\n        }\n\n        setEvents(groupEventsByDay(allEvents));\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && (selectedMember === 'all' || selectedMember)) {\n      fetchEvents();\n    }\n  }, [user, selectedMember, timezone, currentWeekStart, groupEventsByDay, members]);\n\n  if (!user) return <div className=\"auth-warning\">Please login to view calendar</div>;\n\n  if (!selectedMember) {\n    return (\n      <div className=\"auth-warning\">\n        Please select a member to view their calendar availability.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading calendar...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={() => handleWeekChange('prev')}>\n          <ChevronLeft size={24} />\n          <span className=\"mobile-hidden\">Previous Week</span>\n        </button>\n\n        <h2 className=\"week-range\">{getWeekRangeString()}</h2>\n\n        <button className=\"nav-button\" onClick={() => handleWeekChange('next')}>\n          <span className=\"mobile-hidden\">Next Week</span>\n          <ChevronRight size={24} />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">\n        {getWeekDays().map((date) => {\n          const dateString = date.toLocaleDateString('en-US', {\n            weekday: 'long',\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n          });\n\n          return (\n            <div key={dateString} className=\"day-column\">\n              <div \n                className=\"day-header\"\n                onClick={() => setSelectedDate(date)}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"weekday\">\n                  {date.toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    timeZone: timezone,\n                  })}\n                </div>\n                <div className=\"date\">\n                  {date.toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    timeZone: timezone,\n                  })}\n                </div>\n              </div>\n\n              <div className=\"events-list\">\n                {(events[dateString] || []).map((event) => (\n                  <EventItem\n                    key={event.id}\n                    title={event.summary}\n                    start={formatTime(event.start.dateTime)}\n                    end={formatTime(event.end.dateTime)}\n                    memberName={selectedMember === 'all' ? event.memberName : null}\n                  />\n                ))}\n                {events[dateString]?.length === 0 && (\n                  <p className=\"no-events\">No events</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedDate && (\n        <DayDetailView\n          date={selectedDate}\n          events={Object.values(events).flat()}\n          onClose={() => setSelectedDate(null)}\n          timezone={timezone}\n          selectedMember={selectedMember}\n        />\n      )}\n    </div>\n  );\n}\n\n// DayDetailView Component\nconst DayDetailView = ({ date, events, onClose, timezone, selectedMember }) => {\n  const [members, setMembers] = useState([]);\n\n  // Fetch members list\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/members', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Error fetching members:', error);\n      }\n    };\n    fetchMembers();\n  }, []);\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: timezone\n    });\n  };\n\n  const formatTime = (time) => {\n    return new Date(time).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n      timeZone: timezone\n    });\n  };\n\n  // Filter events for the selected date\n  const dateEvents = events.filter(event => {\n    const eventDate = new Date(event.start.dateTime);\n    return eventDate.toLocaleDateString('en-US', { timeZone: timezone }) === \n           date.toLocaleDateString('en-US', { timeZone: timezone });\n  });\n\n  // Group events by time block\n  const getTimeBlocks = () => {\n    const blocks = [];\n    \n    // Generate a block for each hour (24 hours)\n    for (let hour = 0; hour < 24; hour++) {\n      const hourFormatted = hour.toString().padStart(2, '0');\n      const timeLabel = `${hour === 0 ? '12' : hour > 12 ? hour - 12 : hour}:00 ${hour >= 12 ? 'PM' : 'AM'}`;\n      \n      const memberSlots = members.map(member => {\n        // Get events for this member in this hour\n        const memberEvents = dateEvents.filter(event => {\n          // For team view, match by member name; for individual view match by calendar ID\n          const isForMember = selectedMember === 'all' \n            ? event.memberName === member.name \n            : event.calendarId === member.calendarId;\n          \n          if (!isForMember) return false;\n          \n          // Now check if the event overlaps with this hour\n          const eventStartHour = new Date(event.start.dateTime).getHours();\n          const eventEndHour = new Date(event.end.dateTime).getHours();\n          const eventEndMinutes = new Date(event.end.dateTime).getMinutes();\n          \n          // If end time is exactly 00:00, we need to consider it as the end of the previous hour\n          const adjustedEndHour = eventEndMinutes === 0 && eventEndHour === 0 ? 24 : eventEndHour;\n          \n          // Check if this hour falls within the event's time range\n          return hour >= eventStartHour && hour < adjustedEndHour;\n        });\n        \n        const isBusy = memberEvents.length > 0;\n        \n        // Get the color based on the event type\n        const getEventColor = (event) => {\n          const titleLower = (event.summary || '').toLowerCase();\n          if (titleLower.includes('meeting')) return '#4f46e5'; // Indigo\n          if (titleLower.includes('assessment')) return '#ec4899'; // Pink\n          if (titleLower.includes('proxy')) return '#f97316'; // Orange\n          if (titleLower.includes('resume') || titleLower.includes('interview')) return '#14b8a6'; // Teal\n          return '#4f46e5'; // Default - Indigo\n        };\n        \n        return (\n          <div \n            key={member.id} \n            className={`time-slot ${isBusy ? 'busy' : 'available'}`}\n          >\n            {memberEvents.map((event, index) => (\n              <div \n                key={index} \n                className=\"event-details\"\n                style={{ borderLeftColor: getEventColor(event) }}\n              >\n                <div className=\"event-title\">{event.summary}</div>\n                <div className=\"event-time\">\n                  <span className=\"time-icon\">⏱️</span>\n                  {formatTime(event.start.dateTime)} - {formatTime(event.end.dateTime)}\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      });\n      \n      blocks.push(\n        <div key={hour} className=\"time-block\">\n          <div className=\"time-label\">{timeLabel}</div>\n          <div className=\"slots-row\">\n            {memberSlots}\n          </div>\n        </div>\n      );\n    }\n    \n    return blocks;\n  };\n\n  return (\n    <div className=\"day-detail-overlay\" onClick={onClose}>\n      <div className=\"day-detail-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"day-detail-header\">\n          <div>\n            <h2>{formatDate(date)}</h2>\n            <div className=\"timezone-display\">Timezone: {timezone}</div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"availability-grid\">\n          {/* Fixed header row with member names */}\n          <div className=\"member-headers\">\n            <div className=\"time-header\"></div>\n            {members.map(member => (\n              <div key={member.id} className=\"member-header\">\n                <div className=\"member-avatar\" style={{ \n                  backgroundColor: `hsl(${member.id * 60}, 70%, 60%)`\n                }}>\n                  {member.name.charAt(0)}\n                </div>\n                <span className=\"member-name\">{member.name}</span>\n              </div>\n            ))}\n          </div>\n\n          {/* Time blocks */}\n          <div className=\"time-blocks\">\n            {getTimeBlocks()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}