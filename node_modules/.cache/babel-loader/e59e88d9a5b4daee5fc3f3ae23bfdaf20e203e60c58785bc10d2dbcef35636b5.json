{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Radiance_Tech\\\\Desktop\\\\calendar-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GlobalStyle from './styles/GlobalStyles';\nimport Header from './components/Common/Header';\nimport CalendarView from './components/Calendar/CalendarView';\nimport Auth from './components/Auth/Auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [timezone, setTimezone] = useState('Asia/Kolkata');\n  const [events, setEvents] = useState([]);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        var _response$data, _response$data$user;\n        const response = await axios.get('/api/me', {\n          withCredentials: true\n        });\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$user = _response$data.user) !== null && _response$data$user !== void 0 && _response$data$user.email) {\n          setUser(response.data.user);\n          fetchAvailability();\n        }\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Fetch calendar availability\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get('/api/availability', {\n        params: {\n          timezone\n        },\n        withCredentials: true\n      });\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Failed to load calendar data', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    try {\n      await axios.post('/logout', {}, {\n        withCredentials: true\n      });\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      timezone: timezone,\n      onTimezoneChange: e => setTimezone(e.target.value),\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(CalendarView, {\n      events: events,\n      timezone: timezone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"wek8BtKXS0t4wJ38JYM3nKMYKok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","GlobalStyle","Header","CalendarView","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","timezone","setTimezone","events","setEvents","checkAuth","_response$data","_response$data$user","response","get","withCredentials","data","email","fetchAvailability","error","console","params","handleLogout","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onTimezoneChange","e","target","value","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/Radiance_Tech/Desktop/calendar-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GlobalStyle from './styles/GlobalStyles';\nimport Header from './components/Common/Header';\nimport CalendarView from './components/Calendar/CalendarView';\nimport Auth from './components/Auth/Auth';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [timezone, setTimezone] = useState('Asia/Kolkata');\n  const [events, setEvents] = useState([]);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await axios.get('/api/me', { withCredentials: true });\n        if (response.data?.user?.email) {\n          setUser(response.data.user);\n          fetchAvailability();\n        }\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Fetch calendar availability\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get('/api/availability', {\n        params: { timezone },\n        withCredentials: true,\n      });\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Failed to load calendar data', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    try {\n      await axios.post('/logout', {}, { withCredentials: true });\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header\n        user={user}\n        timezone={timezone}\n        onTimezoneChange={(e) => setTimezone(e.target.value)}\n        onLogout={handleLogout}\n      />\n      {user ? (\n        <CalendarView events={events} timezone={timezone} />\n      ) : (\n        <Auth />\n      )}\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}